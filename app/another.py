history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below. If any value is missing or unavailable, return null for that field.\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the individual. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\nSummary:\n- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.\n\nExperience:\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification with:\n  -degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 as a degree and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n  - degree_name: Convert the degree_name into its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. If degree_name is not mentioned infer the degree_name based on department.If missing, return null.\n  - department: Convert the department name into its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return null.\n  - institution: Name of the college or university. If missing, return null.\n  - start_year: Extract the start year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only . If missing, return null.\n  - end_year: Extract the end year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only. If missing, return null. If only one year is mentioned, infer whether it is the start year or end year based on the context. If missing, return null.\n  - duration: Calculate the duration of year for the specific degree. It should come with integer not float.\n  - cgpa: If a percentage is provided, store it directly as the percentage value. If CGPA is provided, convert it to a percentage using the formula: CGPA * 10. If the value is missing, return 0.\n\nLanguages:\n- A list of dictionaries containing the following:\n  - language: The language name (e.g., \"English\", \"Spanish\").\n  - proficiency: The proficiency level classified as: fluent (for high proficiency), intermediate (for medium proficiency), basic (for low proficiency) based on the content you find out. If not specified, it will default to \"basic\" proficiency.\n\nSkills:\n- skills: Separate all skills into two categories:\n  - technical_skills: List of all the technical skills or technologies (e.g., Java, Python, React). If missing, return an empty list [].you will find out and give all the technical skills mentioned in the resume not only in skils part but also in all part(for example in experience,project,certificates,achievement...)\n  - soft_skills: List of all the non-technical or interpersonal skills (e.g., communication, teamwork, leadership). If missing, return an empty list [].\n\nProjects:\n- List each project with:\n  - title: Project name. If missing, return null.\n  - skills: Key skills or technologies used for the project. If missing, return an empty list [].\n  - responsibilities: Key tasks or contributions. If missing, return an empty list [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide \n\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.\nskills-It is a string comes with comma seperated \ncertificates-It is a string comes with dot sepearted for one certificate to another\nprojects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\n\nOutput Format:\njson\n\n{\n    \"name\": \"string\",\n    \"email\": [\"string\", \"string\"],\n    \"phone\": [\"string\", \"string\"],\n    \"location\": {\n        \"street\": \"string\",\n        \"district\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": \"string\",\n        \"per\": \"string\"\n    },\n    \"summary\": \"string\",\n    \"experience\": {\n    \n    \"job\": [\n        {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n        }\n    ],\n    \"total_duration\":\"X.Y\"\n    }\n\n    ,\n    \"education\": [\n        {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n        }\n    ],\n    \"search_summary\": \"string\",\n    \"raw_data\":{\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"phone\": \"string\",\n    \"location\": \"string\",\n    \"expected_salary\": \"string\",\n    \"summary\": \"string\",\n    \"experience\": [\n        {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"education\": [\n        {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\":\"string\",\n    \"skills\": \"string\",\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"certificates\": \"string\",\n    \"search_summary\": \"string\"\n }\n    \n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n    \"name\": \"Jane Smith\",\n    \"email\": [\n        \"jane.smith@example.com\",\n        \"jane.smith.work@example.com\"\n    ],\n    \"phone\": [\n        \"123-456-7890\",\n        \"555-123-4567\"\n    ],\n    \"location\": {\n        \"street\": null,\n        \"district\": \"New York\",\n        \"state\": \"New York\",\n        \"country\": \"USA\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": null,\n        \"per\": null\n    },\n    \"summary\": \"A highly motivated and experienced professional with a background in computer science and a passion for software development. Proven ability to work independently and as part of a team to deliver high-quality solutions.\",\n    \"experience\": {\n        \"job\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"technology\": [\n                    \"Java\",\n                    \"Python\",\n                    \"SQL\",\n                    \"Agile\"\n                ],\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2020\",\n                \"duration\": 2.9,\n                \"responsibilities\": [\n                    \"Developed and maintained Java-based applications.\",\n                    \"Collaborated with cross-functional teams to deliver high-quality software.\",\n                    \"Implemented Agile development methodologies.\"\n                ]\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"InnovateSoft\",\n                \"technology\": [\n                    \"C++\",\n                    \"JavaScript\",\n                    \"React\",\n                    \"Git\"\n                ],\n                \"start_year\": \"01/2021\",\n                \"end_year\": \"12/2022\",\n                \"duration\": 1.9,\n                \"responsibilities\": [\n                    \"Designed and implemented new features for web applications.\",\n                    \"Participated in code reviews to ensure code quality.\",\n                    \"Utilized React for front-end development.\"\n                ]\n            },\n            {\n                \"job_title\": \"Senior Developer\",\n                \"company\": \"Global Technologies\",\n                \"technology\": [\n                    \"AWS\",\n                    \"Docker\",\n                    \"Kubernetes\",\n                    \"Jenkins\"\n                ],\n                \"start_year\": \"01/2023\",\n                \"end_year\": \"12/2023\",\n                \"duration\": 0.9,\n                \"responsibilities\": [\n                    \"Led a team of developers in building scalable cloud-based solutions.\",\n                    \"Implemented CI/CD pipelines using Jenkins.\",\n                    \"Managed infrastructure on AWS using Docker and Kubernetes.\"\n                ]\n            }\n        ],\n        \"total_duration\": 5.7\n    },\n    \"education\": [\n        {\n            \"degree\": \"Bachelor\",\n            \"degree_name\": \"Bachelor of Science\",\n            \"department\": \"Computer Science\",\n            \"institution\": \"University of Technology\",\n            \"start_year\": \"09/2014\",\n            \"end_year\": \"05/2018\",\n            \"duration\": 4,\n            \"cgpa\": \"3.8\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"English\",\n            \"proficiency\": \"fluent\"\n        },\n        {\n            \"language\": \"Spanish\",\n            \"proficiency\": \"intermediate\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"Java\",\n            \"Python\",\n            \"SQL\",\n            \"C++\",\n            \"JavaScript\",\n            \"React\",\n            \"AWS\",\n            \"Docker\",\n            \"Kubernetes\",\n            \"Jenkins\",\n            \"Git\",\n            \"Agile\"\n        ],\n        \"soft_skills\": [\n            \"Communication\",\n            \"Teamwork\",\n            \"Problem-solving\",\n            \"Leadership\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"E-commerce Platform\",\n            \"skills\": [\n                \"React\",\n                \"Node.js\",\n                \"MongoDB\"\n            ],\n            \"responsibilities\": [\n                \"Developed the front-end interface using React.\",\n                \"Implemented the back-end API using Node.js and MongoDB.\",\n                \"Ensured the platform was scalable and secure.\"\n            ]\n        },\n        {\n            \"title\": \"Mobile App for Task Management\",\n            \"skills\": [\n                \"React Native\",\n                \"Firebase\"\n            ],\n            \"responsibilities\": [\n                \"Designed and developed a mobile app for task management.\",\n                \"Integrated with Firebase for real-time data synchronization.\",\n                \"Conducted user testing and gathered feedback.\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"AWS Certified Developer\",\n            \"issuer\": \"Amazon\",\n            \"year\": \"2022\"\n        },\n        {\n            \"title\": \"Certified Scrum Master\",\n            \"issuer\": \"Scrum Alliance\",\n            \"year\": \"2021\"\n        }\n    ],\n    \"search_summary\": \"The resume belongs to Jane Smith with emails jane.smith@example.com,jane.smith.work@example.com and phone numbers 123-456-7890,555-123-4567 located in New York,NewYork,USA.The candidate has 5.7 years of experience in Software Engineer,Software Developer,Senior Developer.Education:B.S(Bachelor of Science) in Computer Science Engineering from University of Technology.Skills:Java,Python,SQL,C++,JavaScript,React,AWS,Docker,Kubernetes,Jenkins,Git,Agile,Communication,Teamwork,Problem-solving,Leadership.Projects:E-commerce Platform,Mobile App for Task Management.Certifications:AWS Certified Developer,Certified Scrum Master.Languages:English(fluent),Spanish(intermediate).\",\n    \"raw_data\": {\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane.smith@example.com,jane.smith.work@example.com\",\n        \"phone\": \"123-456-7890,555-123-4567\",\n        \"location\": \"New York,New York,USA\",\n        \"expected_salary\": null,\n        \"summary\": \"A highly motivated and experienced professional with a background in computer science and a passion for software development. Proven ability to work independently and as part of a team to deliver high-quality solutions.\",\n        \"experience\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"Technology\": \"Java,Python,SQL,Agile\",\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2020\",\n                \"duration\": \"2.9\",\n                \"responsibilities\": \"Developed and maintained Java-based applications.Collaborated with cross-functional teams to deliver high-quality software.Implemented Agile development methodologies.\"\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"InnovateSoft\",\n                \"Technology\": \"C++,JavaScript,React,Git\",\n                \"start_year\": \"01/2021\",\n                \"end_year\": \"12/2022\",\n                \"duration\": \"1.9\",\n                \"responsibilities\": \"Designed and implemented new features for web applications.Participated in code reviews to ensure code quality.Utilized React for front-end development.\"\n            },\n            {\n                \"job_title\": \"Senior Developer\",\n                \"company\": \"Global Technologies\",\n                \"Technology\": \"AWS,Docker,Kubernetes,Jenkins\",\n                \"start_year\": \"01/2023\",\n                \"end_year\": \"12/2023\",\n                \"duration\": \"0.9\",\n                \"responsibilities\": \"Led a team of developers in building scalable cloud-based solutions.Implemented CI/CD pipelines using Jenkins.Managed infrastructure on AWS using Docker and Kubernetes.\"\n            }\n        ],\n        \"education\": [\n            {\n                \"degree_name\": \"Bachelor of Science\",\n                \"department\": \"Computer Science\",\n                \"institution\": \"University of Technology\",\n                \"start_year\": \"09/2014\",\n                \"end_year\": \"05/2018\",\n                \"duration\": \"4\",\n                \"cgpa\": \"3.8\"\n            }\n        ],\n        \"languages\": \"English(fluent),Spanish(intermediate)\",\n        \"skills\": \"Java,Python,SQL,C++,JavaScript,React,AWS,Docker,Kubernetes,Jenkins,Git,Agile,Communication,Teamwork,Problem-solving,Leadership\",\n        \"projects\": [\n            {\n                \"title\": \"E-commerce Platform\",\n                \"skills\": \"React,Node.js,MongoDB\",\n                \"responsibilities\": \"Developed the front-end interface using React.Implemented the back-end API using Node.js and MongoDB.Ensured the platform was scalable and secure.\"\n            },\n            {\n                \"title\": \"Mobile App for Task Management\",\n                \"skills\": \"React Native,Firebase\",\n                \"responsibilities\": \"Designed and developed a mobile app for task management.Integrated with Firebase for real-time data synchronization.Conducted user testing and gathered feedback.\"\n            }\n        ],\n        \"certificates\": \"AWS Certified Developer.Certified Scrum Master\",\n        \"search_summary\": null\n    }\n}\n```",
                ],
            },
        ]


history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below. If any value is missing or unavailable, return null for that field.\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the individual. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\nSummary:\n- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.\n\nExperience:\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return null.\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification with:\n  -degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 as a degree and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n  - degree_name: Convert the degree_name into its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. If degree_name is not mentioned infer the degree_name based on department.If missing, return null.\n  - department: Convert the department name into its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return null.\n  - institution: Name of the college or university. If missing, return null.\n  - start_year: Extract the start year in mm/yyyy format. If missing, return null.\n  - end_year: Extract the end year in mm/yyyy format. If missing, return null. If only one year is mentioned, infer whether it is the start year or end year based on the context. If missing, return null.\n  - duration: Calculate the duration of year for the specific degree. It should come with integer not float.\n  - cgpa: If a percentage is provided, store it directly as the percentage value. If CGPA is provided, convert it to a percentage using the formula: CGPA * 10. If the value is missing, return null.\n\nLanguages:\n- A list of dictionaries containing the following:\n  - language: The language name (e.g., \"English\", \"Spanish\").\n  - proficiency: The proficiency level classified as: fluent (for high proficiency), intermediate (for medium proficiency), basic (for low proficiency) based on the content you find out. If not specified, it will default to \"basic\" proficiency.\n\nSkills:\n- skills: Separate all skills into two categories:\n  - technical_skills: List of all the technical skills or technologies (e.g., Java, Python, React). If missing, return an empty list [].you will find out and give all the technical skills mentioned in the resume not only in skils part but also in all part(for example in experience,project,certificates,achievement...)\n  - soft_skills: List of all the non-technical or interpersonal skills (e.g., communication, teamwork, leadership). If missing, return an empty list [].\n\nProjects:\n- List each project with:\n  - title: Project name. If missing, return null.\n  - skills: Key skills or technologies used for the project. If missing, return an empty list [].\n  - responsibilities: Key tasks or contributions. If missing, return an empty list [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide \n\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.\nskills-It is a string comes with comma seperated \ncertificates-It is a string comes with dot sepearted for one certificate to another\nprojects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\n\nOutput Format:\njson\n\n{\n    \"name\": \"string\",\n    \"email\": [\"string\", \"string\"],\n    \"phone\": [\"string\", \"string\"],\n    \"location\": {\n        \"street\": \"string\",\n        \"district\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": \"string\",\n        \"per\": \"string\"\n    },\n    \"summary\": \"string\",\n    \"experience\": {\n    \n    \"job\": [\n        {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n        }\n    ],\n    \"total_duration\":\"X.Y\"\n    }\n\n    ,\n    \"education\": [\n        {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n        }\n    ],\n    \"search_summary\": \"string\",\n    \"raw_data\":{\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"phone\": \"string\",\n    \"location\": \"string\",\n    \"expected_salary\": \"string\",\n    \"summary\": \"string\",\n    \"experience\": [\n        {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"education\": [\n        {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\":\"string\",\n    \"skills\": \"string\",\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"certificates\": \"string\",\n    \"search_summary\": \"string\"\n }\n    \n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n    \"name\": \"Ravi Kumar\",\n    \"email\": [\n        \"ravi.kumar@example.com\"\n    ],\n    \"phone\": [\n        \"9876543210\"\n    ],\n    \"location\": {\n        \"street\": null,\n        \"district\": \"Chennai\",\n        \"state\": \"Tamil Nadu\",\n        \"country\": \"India\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": null,\n        \"per\": null\n    },\n    \"summary\": \"Results-driven IT professional with 5+ years of experience in software development and project management. Expertise in Java, Python, and Agile methodologies.\",\n    \"experience\": {\n        \"job\": [\n            {\n                \"job_title\": \"Senior Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"technology\": [\n                    \"Java\",\n                    \"Spring\",\n                    \"Hibernate\",\n                    \"SQL\"\n                ],\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2022\",\n                \"duration\": \"4.9\",\n                \"responsibilities\": [\n                    \"Led a team of 5 developers in designing and implementing enterprise-level applications.\",\n                    \"Developed RESTful APIs using Spring Boot and Hibernate.\",\n                    \"Managed project timelines and ensured on-time delivery.\",\n                    \"Conducted code reviews and provided technical guidance to junior developers.\"\n                ]\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"Global Innovations Ltd.\",\n                \"technology\": [\n                    \"Python\",\n                    \"Django\",\n                    \"PostgreSQL\"\n                ],\n                \"start_year\": \"01/2016\",\n                \"end_year\": \"12/2017\",\n                \"duration\": \"1.9\",\n                \"responsibilities\": [\n                    \"Developed web applications using Python and Django framework.\",\n                    \"Designed and implemented database schemas using PostgreSQL.\",\n                    \"Collaborated with cross-functional teams to deliver high-quality software products.\",\n                    \"Participated in Agile development processes including sprint planning and daily stand-ups.\"\n                ]\n            }\n        ],\n        \"total_duration\": \"6.8\"\n    },\n    \"education\": [\n        {\n            \"degree\": \"Bachelor\",\n            \"degree_name\": \"Bachelor of Engineering\",\n            \"department\": \"Computer Science Engineering\",\n            \"institution\": \"Anna University\",\n            \"start_year\": \"08/2012\",\n            \"end_year\": \"05/2016\",\n            \"duration\": \"4\",\n            \"cgpa\": \"85\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"English\",\n            \"proficiency\": \"fluent\"\n        },\n        {\n            \"language\": \"Tamil\",\n            \"proficiency\": \"intermediate\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"Java\",\n            \"Python\",\n            \"Spring Boot\",\n            \"Hibernate\",\n            \"Django\",\n            \"PostgreSQL\",\n            \"RESTful APIs\",\n            \"SQL\",\n            \"Agile\",\n            \"Git\"\n        ],\n        \"soft_skills\": [\n            \"Leadership\",\n            \"Teamwork\",\n            \"Communication\",\n            \"Problem-solving\",\n            \"Time Management\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"E-commerce Platform\",\n            \"skills\": [\n                \"Java\",\n                \"Spring Boot\",\n                \"Hibernate\",\n                \"MySQL\"\n            ],\n            \"responsibilities\": [\n                \"Developed a scalable e-commerce platform using Java and Spring Boot.\",\n                \"Implemented user authentication and authorization using Spring Security.\",\n                \"Designed and implemented database schemas using MySQL.\",\n                \"Integrated third-party payment gateways for secure online transactions.\"\n            ]\n        },\n        {\n            \"title\": \"Data Analytics Dashboard\",\n            \"skills\": [\n                \"Python\",\n                \"Django\",\n                \"PostgreSQL\",\n                \"Tableau\"\n            ],\n            \"responsibilities\": [\n                \"Developed a data analytics dashboard using Python and Django.\",\n                \"Integrated data from multiple sources using RESTful APIs.\",\n                \"Implemented data visualization using Tableau.\",\n                \"Provided insights and recommendations based on data analysis.\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"Certified Scrum Master (CSM)\",\n            \"issuer\": \"Scrum Alliance\",\n            \"year\": \"2019\"\n        },\n        {\n            \"title\": \"Oracle Certified Java Programmer (OCJP)\",\n            \"issuer\": \"Oracle\",\n            \"year\": \"2017\"\n        }\n    ],\n    \"search_summary\": \"Ravi Kumar, ravi.kumar@example.com, 9876543210, Chennai(district), TamilNadu(state), India(country), Senior Software Engineer at Tech Solutions Inc.(Java, Spring, Hibernate, SQL), Software Developer at Global Innovations Ltd.(Python, Django, PostgreSQL), B.E(Bachelor of Engineering) in CSE(Computer Science Engineering) from Anna University, Certified Scrum Master(CSM) from Scrum Alliance(2019), Oracle Certified Java Programmer(OCJP) from Oracle(2017), Java, Python, Spring Boot, Hibernate, Django, PostgreSQL, RESTful APIs, SQL, Agile, Git, Leadership, Teamwork, Communication, Problem-solving, Time Management.\",\n    \"raw_data\": {\n        \"name\": \"Ravi Kumar\",\n        \"email\": \"ravi.kumar@example.com\",\n        \"phone\": \"9876543210\",\n        \"location\": \"Chennai, Tamil Nadu, India\",\n        \"expected_salary\": null,\n        \"summary\": \"Results-driven IT professional with 5+ years of experience in software development and project management. Expertise in Java, Python, and Agile methodologies.\",\n        \"experience\": [\n            {\n                \"job_title\": \"Senior Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"Technology\": \"Java, Spring, Hibernate, SQL\",\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2022\",\n                \"duration\": \"4.9\",\n                \"responsibilities\": \"Led a team of 5 developers in designing and implementing enterprise-level applications.Developed RESTful APIs using Spring Boot and Hibernate.Managed project timelines and ensured on-time delivery.Conducted code reviews and provided technical guidance to junior developers.\"\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"Global Innovations Ltd.\",\n                \"Technology\": \"Python, Django, PostgreSQL\",\n                \"start_year\": \"01/2016\",\n                \"end_year\": \"12/2017\",\n                \"duration\": \"1.9\",\n                \"responsibilities\": \"Developed web applications using Python and Django framework.Designed and implemented database schemas using PostgreSQL.Collaborated with cross-functional teams to deliver high-quality software products.Participated in Agile development processes including sprint planning and daily stand-ups.\"\n            }\n        ],\n        \"education\": [\n            {\n                \"degree_name\": \"Bachelor of Engineering\",\n                \"department\": \"Computer Science Engineering\",\n                \"institution\": \"Anna University\",\n                \"start_year\": \"08/2012\",\n                \"end_year\": \"05/2016\",\n                \"duration\": \"4\",\n                \"cgpa\": \"85\"\n            }\n        ],\n        \"languages\": \"English(proficiency),Tamil\",\n        \"skills\": \"Java, Python, Spring Boot, Hibernate, Django, PostgreSQL, RESTful APIs, SQL, Agile, Git, Leadership, Teamwork, Communication, Problem-solving, Time Management\",\n        \"projects\": [\n            {\n                \"title\": \"E-commerce Platform\",\n                \"skills\": \"Java, Spring Boot, Hibernate, MySQL\",\n                \"responsibilities\": \"Developed a scalable e-commerce platform using Java and Spring Boot.Implemented user authentication and authorization using Spring Security.Designed and implemented database schemas using MySQL.Integrated third-party payment gateways for secure online transactions.\"\n            },\n            {\n                \"title\": \"Data Analytics Dashboard\",\n                \"skills\": \"Python, Django, PostgreSQL, Tableau\",\n                \"responsibilities\": \"Developed a data analytics dashboard using Python and Django.Integrated data from multiple sources using RESTful APIs.Implemented data visualization using Tableau.Provided insights and recommendations based on data analysis.\"\n            }\n        ],\n        \"certificates\": \"Certified Scrum Master (CSM) - Scrum Alliance - 2019.Oracle Certified Java Programmer (OCJP) - Oracle - 2017\",\n        \"search_summary\": \"Ravi Kumar, ravi.kumar@example.com, 9876543210, Chennai(district), TamilNadu(state), India(country), Senior Software Engineer at Tech Solutions Inc.(Java, Spring, Hibernate, SQL), Software Developer at Global Innovations Ltd.(Python, Django, PostgreSQL), B.E(Bachelor of Engineering) in CSE(Computer Science Engineering) from Anna University, Certified Scrum Master(CSM) from Scrum Alliance(2019), Oracle Certified Java Programmer(OCJP) from Oracle(2017), Java, Python, Spring Boot, Hibernate, Django, PostgreSQL, RESTful APIs, SQL, Agile, Git, Leadership, Teamwork, Communication, Problem-solving, Time Management.\"\n    }\n}\n```",
                ],
            },
        ]


experience updated 

def compare_experience(resume_experience: list, jd_experience: list) -> float:
    print(jd_experience)
    print(resume_experience)
    if not jd_experience:
        return 1.0
    resume_jobs = resume_experience.get("job", [])
    if not resume_jobs:
        print("done")
        return 0.0
    score = 0.0
    
    for jd in jd_experience:
        jd_skills = jd.get('skills', '')
        jd_min = float(jd.get('min_experience', 0) or 0)
        print("jd_min")
        print(jd_min)
        jd_max = float(jd.get('max_experience', float('inf')) or float('inf'))
        #print(f"JD Skills: {jd_skills}, Min Exp: {jd_min}, Max Exp: {jd_max}")
        
        for resume in resume_jobs:
            resume_skills = [skill.lower() for skill in resume.get('technology', [])]
            print("resume_skills")
            print(resume_skills)
            resume_duration = resume.get('duration', 0)
            if resume_duration is None:
                resume_duration = 0
            else:
                try:
                    resume_duration = float(resume_duration)
                except ValueError:
                    resume_duration = 0 
            resume_title=resume.get('job_title','')
            
            #print(f"Resume Skills: {resume_skills}, Duration: {resume_duration}")
            if jd_skills.lower() in resume_skills or fuzz.partial_ratio(jd_skills.lower(), resume_title.lower())>80: 
                print("Skills match!")
                score += 0.5 
                
                if jd_min <= resume_duration <= jd_max:
                    print("no")
                    score += 0.5
                elif resume_duration >= jd_max:
                    score += 0.5 
                
                break
                
    exp = min(score, 1.0)
    #print("Final Experience Score:", exp)
    return exp


history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON format specified below. Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.\n- max_experience: The maximum years of experience required for that skill or technology.\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contract\", \"Bond\", \"Other employment type\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Associate Software Engineer\"\n  ],\n  \"company\": \"Tesco Bengaluru\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Bengaluru\",\n      \"state\": \"Karnataka\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Work as part of a team to deliver high quality software in line with the team’s agreed coding standards and principles.\",\n    \"Work collaboratively with other Software Engineers, QA Engineers, Business Analysts and Architects to solve new and existing technical challenges.\",\n    \"Participate and contribute in team ceremonies and wider Tesco Technology communities.\",\n    \"Write well designed, testable, efficient code.\",\n    \"Ensure designs are in compliance with specifications.\",\n    \"Prepare and produce releases of software components.\",\n    \"Support continuous improvement by investigating alternatives and technologies and presenting these for architectural review.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Java\",\n      \"Spring Boot\",\n      \"Web Services\",\n      \"REST APIs\",\n      \"SQL\",\n      \"TDD\",\n      \"BDD\",\n      \"Microservices\",\n      \"Cloud Technologies\",\n      \"Jenkins\",\n      \"Gherkin\",\n      \"Cucumber\"\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Collaboration\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Java\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Spring Boot\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Web Services\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"REST APIs\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"SQL\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"TDD\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"BDD\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Microservices\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Cloud Technologies\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Jenkins\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Gherkin\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    },\n    {\n      \"skills\": \"Cucumber\",\n      \"min_experience\": \"0\",\n      \"max_experience\": \"1\",\n      \"experience_range\": \"0-1\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Associate Software Engineer at Tesco Bengaluru, full-time role. Responsibilities include delivering high-quality software, collaborating with team members, writing efficient code, and supporting continuous improvement. Required skills include Java, Spring Boot, Web Services, REST APIs, SQL, TDD, BDD, Microservices, Cloud Technologies, Jenkins, Gherkin, and Cucumber.\",\n  \"raw_data\": {\n    \"job_titles\": \"Associate Software Engineer\",\n    \"company\": \"Tesco Bengaluru\",\n    \"locations\": \"Bengaluru\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Work as part of a team to deliver high quality software in line with the team’s agreed coding standards and principles.\\nWork collaboratively with other Software Engineers, QA Engineers, Business Analysts and Architects to solve new and existing technical challenges.\\nParticipate and contribute in team ceremonies and wider Tesco Technology communities.\\nWrite well designed, testable, efficient code.\\nEnsure designs are in compliance with specifications.\\nPrepare and produce releases of software components.\\nSupport continuous improvement by investigating alternatives and technologies and presenting these for architectural review.\",\n    \"skills_required\": \"Java, Spring Boot, Web Services, REST APIs, SQL, TDD, BDD, Microservices, Cloud Technologies, Jenkins, Gherkin, Cucumber\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": null\n  }\n}\n```",
                ],
            },
        ]

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON format specified below. Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.\n- max_experience: The maximum years of experience required for that skill or technology.\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher let us avoid of providing empty list and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0 \n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Business Development Manager\",\n    \"BDM\"\n  ],\n  \"company\": \"NMS Infotech\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Chennai\",\n      \"state\": \"Tamil Nadu\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Excellent verbal and written communication skills\",\n    \"To generate leads through cold calling\",\n    \"Setting appointments, meeting and client acquisition\",\n    \"Create new lead generation strategies through various channels\",\n    \"Identifies product improvements or new products by remaining current on industry trends, market activities, and competitors.\",\n    \"Prepares reports by collecting, analyzing, and summarizing information.\",\n    \"Maintains quality service by establishing and enforcing organization standards.\",\n    \"Good convincing power\",\n    \"Good presentation skills\",\n    \"Should be able to independently handle the assigned tasks\",\n    \"Should be a quick learner\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Cold Calling\",\n      \"Lead Generation\",\n      \"Client Acquisition\"\n    ],\n    \"soft\": [\n      \"Verbal Communication\",\n      \"Written Communication\",\n      \"Presentation Skills\",\n      \"Convincing Power\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Business Development\",\n      \"min_experience\": \"2\",\n      \"max_experience\": \"5\",\n      \"experience_range\": \"2-5\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"The job description is for a Business Development Manager(BDM) position at NMS Infotech in Chennai. The role involves lead generation through cold calling, setting appointments, client acquisition, and creating lead generation strategies. Required skills include verbal and written communication, cold calling, lead generation, client acquisition, presentation skills, and convincing power. The experience required is 2-5 years in business development.\",\n  \"raw_data\": {\n    \"job_titles\": \"Business Development Manager/BDM\",\n    \"company\": \"NMS Infotech\",\n    \"locations\": \"Chennai\",\n    \"employment_type\": \"Full Time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Excellent verbal and written communication skills\\nTo generate leads through cold calling\\nSetting appointments, meeting and client acquisition\\nCreate new lead generation strategies through various channels\\nIdentifies product improvements or new products by remaining current on industry trends, market activities, and competitors.\\nPrepares reports by collecting, analyzing, and summarizing information.\\nMaintains quality service by establishing and enforcing organization standards.\\nGood convincing power\\nGood presentation skills\\nShould be able to independently handle the assigned tasks\\nShould be a quick learner\",\n    \"skills_required\": \"verbal and written communication skills,cold calling, lead generation, client acquisition,presentation skills, and convincing power\",\n    \"experience_required\": \"2-5 years experience in Business Development\",\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Business Development Manager(BDM) position at NMS Infotech in Chennai. 2-5 years experience in Business Development.\"\n  }\n}\n```",
                ],
            },
        ]

recent
history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided job description text and return them as a structured JSON object. Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.\n- max_experience: The maximum years of experience required for that skill or technology.\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.let us avoid of providing empty list and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0.strictly avoid the empty list\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Executive Assistant\"\n  ],\n  \"company\": \"ARxIUM\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Chandler\",\n      \"state\": \"Arizona\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Manage executive schedules, including scheduling appointments and coordinating meetings.\",\n    \"Arrange complex and detailed travel plans and itineraries, compile documents for travel-related meetings.\",\n    \"Organize programs, events, meetings, or conferences by arranging for speakers and meeting locations, contacting attendees, and coordinating audiovisual equipment, transportation, lodging, and refreshments.\",\n    \"Prepare reports, presentations, and correspondence accurately and swiftly.\",\n    \"Make administrative decisions and take action on behalf of the executive in their absence.\",\n    \"Maintain confidential and sensitive information.\",\n    \"Effectively use office automation equipment such as computer, printer, fax, and copier.\",\n    \"Greet visitors and ascertain the nature of the visit, and direct visitors to appropriate persons.\",\n    \"Operate a multi-line telephone system.\",\n    \"Open, sort, and distribute incoming correspondence, including faxes and email.\",\n    \"Prepare responses to correspondence containing routine inquiries.\",\n    \"Compile and maintain records and databases.\",\n    \"Coordinate office management activities.\",\n    \"Establish and revise office procedures.\",\n    \"Perform other duties as assigned.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Microsoft Office Suite\",\n      \"Microsoft Outlook\",\n      \"Computer\",\n      \"Printer\",\n      \"Fax\",\n      \"Copier\",\n      \"Audiovisual equipment\"\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Organizational skills\",\n      \"Problem-solving\",\n      \"Time management\",\n      \"Decision-making\",\n      \"Confidentiality\",\n      \"Interpersonal skills\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Executive Assistant Experience\",\n      \"min_experience\": 5,\n      \"max_experience\": 10,\n      \"experience_range\": \"5-10\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"Bachelor\",\n      \"degree_name\": [\n        \"Bachelor of Arts\",\n        \"Bachelor of Science\"\n      ],\n      \"department\": [],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"The job description is for an Executive Assistant position at ARxIUM located in Chandler, Arizona, USA. The role is full-time. The key responsibilities include managing schedules, arranging travel, organizing events, preparing reports and presentations, making administrative decisions, maintaining confidentiality, and general office management. Essential skills include proficiency in Microsoft Office Suite, Microsoft Outlook, and office equipment, along with strong communication, organizational, problem-solving, and time management skills. A Bachelor's degree (Bachelor of Arts,Bachelor of Science) and 5-10 years of executive assistant experience are required.\",\n  \"raw_data\": {\n    \"job_titles\": \"Executive Assistant\",\n    \"company\": \"ARxIUM\",\n    \"locations\": \"Chandler, AZ\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Manage executive schedules, including scheduling appointments and coordinating meetings.\\nArrange complex and detailed travel plans and itineraries, compile documents for travel-related meetings.\\nOrganize programs, events, meetings, or conferences by arranging for speakers and meeting locations, contacting attendees, and coordinating audiovisual equipment, transportation, lodging, and refreshments.\\nPrepare reports, presentations, and correspondence accurately and swiftly.\\nMake administrative decisions and take action on behalf of the executive in their absence.\\nMaintain confidential and sensitive information.\\nEffectively use office automation equipment such as computer, printer, fax, and copier.\\nGreet visitors and ascertain the nature of the visit, and direct visitors to appropriate persons.\\nOperate a multi-line telephone system.\\nOpen, sort, and distribute incoming correspondence, including faxes and email.\\nPrepare responses to correspondence containing routine inquiries.\\nCompile and maintain records and databases.\\nCoordinate office management activities.\\nEstablish and revise office procedures.\\nPerform other duties as assigned.\",\n    \"skills_required\": \"Microsoft Office Suite, Microsoft Outlook, Computer, Printer, Fax, Copier, Audiovisual equipment, Communication, Organizational skills, Problem-solving, Time management, Decision-making, Confidentiality, Interpersonal skills\",\n    \"experience_required\": \"5-10 years of executive assistant experience\",\n    \"education_required\": \"Bachelor's degree\",\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Executive Assistant position at ARxIUM located in Chandler, Arizona. The role is full-time. The key responsibilities include managing schedules, arranging travel, organizing events, preparing reports and presentations, making administrative decisions, maintaining confidentiality, and general office management. A Bachelor's degree and 5-10 years of executive assistant experience are required.\"\n  }\n}\n```",
                ],
            },
        ]

7 feb
old

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON format specified below. Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.\n- max_experience: The maximum years of experience required for that skill or technology.\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.let us avoid of providing empty list and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Tech Lead\"\n  ],\n  \"company\": \"Axxela\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Lagos\",\n      \"state\": \"Lagos\",\n      \"country\": \"Nigeria\"\n    }\n  ],\n  \"employment_type\": [],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Lead a team of software engineers, providing technical guidance and mentorship.\",\n    \"Design, develop, and maintain high-quality software solutions.\",\n    \"Collaborate with product managers, designers, and other stakeholders to define product requirements.\",\n    \"Participate in code reviews and ensure adherence to coding standards.\",\n    \"Troubleshoot and resolve software defects and performance issues.\",\n    \"Stay up-to-date with the latest technologies and trends in software development.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Software Development\",\n      \"Technical Leadership\",\n      \"Software Design\",\n      \"Code Review\",\n      \"Troubleshooting\"\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Teamwork\",\n      \"Mentorship\",\n      \"Collaboration\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Software Development\",\n      \"min_experience\": 5,\n      \"max_experience\": 7,\n      \"experience_range\": \"5-7\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Tech Lead position at Axxela in Lagos. Requires experience in software development and technical leadership. Responsibilities include leading a team, designing software solutions, and troubleshooting issues. Skills required are software development, technical leadership, software design, code review, troubleshooting, communication, teamwork, mentorship, and collaboration. B.E(bachelor of engineering) in cse(computer science engineering)\",\n  \"raw_data\": {\n    \"job_titles\": \"Tech Lead\",\n    \"company\": \"Axxela\",\n    \"locations\": \"Lagos\",\n    \"employment_type\": null,\n    \"salary_details\": null,\n    \"responsibilities\": \"Lead a team of software engineers, providing technical guidance and mentorship. Design, develop, and maintain high-quality software solutions. Collaborate with product managers, designers, and other stakeholders to define product requirements. Participate in code reviews and ensure adherence to coding standards. Troubleshoot and resolve software defects and performance issues. Stay up-to-date with the latest technologies and trends in software development.\",\n    \"skills_required\": \"Software Development, Technical Leadership, Software Design, Code Review, Troubleshooting, Communication, Teamwork, Mentorship, Collaboration\",\n    \"experience_required\": \"5-7 years of experience in software development\",\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": null\n  }\n}\n```",
                ],
            },
        ]

error in json object and experience_required

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON format specified below. Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.let us avoid of providing empty list and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": \"string\",\n      \"max_experience\": \"string\",\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Senior Associate - Data Science\"\n  ],\n  \"company\": \"Tiger Analytics\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Gurgaon\",\n      \"state\": \"Haryana\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Define the problem statement clearly and create a solution approach.\",\n    \"Leverage data to discover patterns and solve client business problems.\",\n    \"Transform data into actionable insights and communicate them effectively to stakeholders.\",\n    \"Conceptualize, develop, and maintain data science models to drive business solutions.\",\n    \"Collaborate with cross-functional teams to implement solutions and improve business outcomes.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Statistical Modeling\",\n      \"Machine Learning\",\n      \"Data Mining\",\n      \"Python\",\n      \"R\",\n      \"SQL\",\n      \"Data Visualization tools\"\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Problem-solving\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Statistical Modeling\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"Machine Learning\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"Data Mining\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"Python\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"R\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"SQL\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    },\n    {\n      \"skills\": \"Data Visualization tools\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"Bachelor\",\n      \"degree_name\": [\n        \"Bachelor of Engineering\"\n      ],\n      \"department\": [],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    },\n    {\n      \"degree\": \"Master\",\n      \"degree_name\": [\n        \"Master of Science\",\n        \"Master of Technology\",\n        \"Master of Engineering\"\n      ],\n      \"department\": [],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Senior Associate - Data Science at Tiger Analytics in Gurgaon, Haryana, India. Responsibilities include defining problem statements, leveraging data for insights, developing data science models, and collaborating with cross-functional teams. Requires experience in Statistical Modeling, Machine Learning, Data Mining, Python, R, SQL, and Data Visualization tools. Education includes B.E (Bachelor of Engineering) or Master's degree (Master of Science, Master of Technology, Master of Engineering).\",\n  \"raw_data\": {\n    \"job_titles\": \"Senior Associate - Data Science\",\n    \"company\": \"Tiger Analytics\",\n    \"locations\": \"Gurgaon\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Define the problem statement clearly and create a solution approach.\\nLeverage data to discover patterns and solve client business problems.\\nTransform data into actionable insights and communicate them effectively to stakeholders.\\nConceptualize, develop, and maintain data science models to drive business solutions.\\nCollaborate with cross-functional teams to implement solutions and improve business outcomes.\",\n    \"skills_required\": \"Statistical Modeling, Machine Learning, Data Mining, Python, R, SQL, Data Visualization tools\",\n    \"experience_required\": \"3-5 years of experience in Statistical Modeling, Machine Learning, Data Mining, Python, R, SQL, and Data Visualization tools\",\n    \"education_required\": \"Bachelor's or Master's degree\",\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Senior Associate - Data Science at Tiger Analytics in Gurgaon, Haryana, India. Responsibilities include defining problem statements, leveraging data for insights, developing data science models, and collaborating with cross-functional teams. Requires experience in Statistical Modeling, Machine Learning, Data Mining, Python, R, SQL, and Data Visualization tools. Education includes B.E (Bachelor of Engineering) or Master's degree (Master of Science, Master of Technology, Master of Engineering).\"\n  }\n}\n```",
                ],
            },
        ]

resume old
history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below. If any value is missing or unavailable, return null for that field.\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the individual. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\nSummary:\n- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.\n\nExperience:\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification with:\n  -degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 as a degree and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n  - degree_name: Convert the degree_name into its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. If degree_name is not mentioned infer the degree_name based on department.If missing, return null.\n  - department: Convert the department name into its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return null.\n  - institution: Name of the college or university. If missing, return null.\n  - start_year: Extract the start year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only . If missing, return null.\n  - end_year: Extract the end year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only. If missing, return null. If only one year is mentioned, infer whether it is the start year or end year based on the context. If missing, return null.\n  - duration: Calculate the duration of year for the specific degree. It should come with integer not float.\n  - cgpa: If a percentage is provided, store it directly as the percentage value. If CGPA is provided, convert it to a percentage using the formula: CGPA * 10. If the value is missing, return 0.\n\nLanguages:\n- A list of dictionaries containing the following:\n  - language: The language name (e.g., \"English\", \"Spanish\").\n  - proficiency: The proficiency level classified as: fluent (for high proficiency), intermediate (for medium proficiency), basic (for low proficiency) based on the content you find out. If not specified, it will default to \"basic\" proficiency.\n\nSkills:\n- skills: Separate all skills into two categories:\n  - technical_skills: List of all the technical skills or technologies (e.g., Java, Python, React). If missing, return an empty list [].you will find out and give all the technical skills mentioned in the resume not only in skils part but also in all part(for example in experience,project,certificates,achievement...)\n  - soft_skills: List of all the non-technical or interpersonal skills (e.g., communication, teamwork, leadership). If missing, return an empty list [].\n\nProjects:\n- List each project with:\n  - title: Project name. If missing, return null.\n  - skills: Key skills or technologies used for the project. If missing, return an empty list [].\n  - responsibilities: Key tasks or contributions. If missing, return an empty list [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide \n\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.\nskills-It is a string comes with comma seperated \ncertificates-It is a string comes with dot sepearted for one certificate to another\nprojects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\n\nOutput Format:\njson\n\n{\n    \"name\": \"string\",\n    \"email\": [\"string\", \"string\"],\n    \"phone\": [\"string\", \"string\"],\n    \"location\": {\n        \"street\": \"string\",\n        \"district\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": \"string\",\n        \"per\": \"string\"\n    },\n    \"summary\": \"string\",\n    \"experience\": {\n    \n    \"job\": [\n        {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n        }\n    ],\n    \"total_duration\":\"X.Y\"\n    }\n\n    ,\n    \"education\": [\n        {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n        }\n    ],\n    \"search_summary\": \"string\",\n    \"raw_data\":{\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"phone\": \"string\",\n    \"location\": \"string\",\n    \"expected_salary\": \"string\",\n    \"summary\": \"string\",\n    \"experience\": [\n        {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"education\": [\n        {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\":\"string\",\n    \"skills\": \"string\",\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"certificates\": \"string\",\n    \"search_summary\": \"string\"\n }\n    \n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n    \"name\": \"Jane Smith\",\n    \"email\": [\n        \"jane.smith@example.com\",\n        \"jane.smith.work@example.com\"\n    ],\n    \"phone\": [\n        \"123-456-7890\",\n        \"555-123-4567\"\n    ],\n    \"location\": {\n        \"street\": null,\n        \"district\": \"New York\",\n        \"state\": \"New York\",\n        \"country\": \"USA\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": null,\n        \"per\": null\n    },\n    \"summary\": \"A highly motivated and experienced professional with a background in computer science and a passion for software development. Proven ability to work independently and as part of a team to deliver high-quality solutions.\",\n    \"experience\": {\n        \"job\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"technology\": [\n                    \"Java\",\n                    \"Python\",\n                    \"SQL\",\n                    \"Agile\"\n                ],\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2020\",\n                \"duration\": 2.9,\n                \"responsibilities\": [\n                    \"Developed and maintained Java-based applications.\",\n                    \"Collaborated with cross-functional teams to deliver high-quality software.\",\n                    \"Implemented Agile development methodologies.\"\n                ]\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"InnovateSoft\",\n                \"technology\": [\n                    \"C++\",\n                    \"JavaScript\",\n                    \"React\",\n                    \"Git\"\n                ],\n                \"start_year\": \"01/2021\",\n                \"end_year\": \"12/2022\",\n                \"duration\": 1.9,\n                \"responsibilities\": [\n                    \"Designed and implemented new features for web applications.\",\n                    \"Participated in code reviews to ensure code quality.\",\n                    \"Utilized React for front-end development.\"\n                ]\n            },\n            {\n                \"job_title\": \"Senior Developer\",\n                \"company\": \"Global Technologies\",\n                \"technology\": [\n                    \"AWS\",\n                    \"Docker\",\n                    \"Kubernetes\",\n                    \"Jenkins\"\n                ],\n                \"start_year\": \"01/2023\",\n                \"end_year\": \"12/2023\",\n                \"duration\": 0.9,\n                \"responsibilities\": [\n                    \"Led a team of developers in building scalable cloud-based solutions.\",\n                    \"Implemented CI/CD pipelines using Jenkins.\",\n                    \"Managed infrastructure on AWS using Docker and Kubernetes.\"\n                ]\n            }\n        ],\n        \"total_duration\": 5.7\n    },\n    \"education\": [\n        {\n            \"degree\": \"Bachelor\",\n            \"degree_name\": \"Bachelor of Science\",\n            \"department\": \"Computer Science\",\n            \"institution\": \"University of Technology\",\n            \"start_year\": \"09/2014\",\n            \"end_year\": \"05/2018\",\n            \"duration\": 4,\n            \"cgpa\": \"3.8\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"English\",\n            \"proficiency\": \"fluent\"\n        },\n        {\n            \"language\": \"Spanish\",\n            \"proficiency\": \"intermediate\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"Java\",\n            \"Python\",\n            \"SQL\",\n            \"C++\",\n            \"JavaScript\",\n            \"React\",\n            \"AWS\",\n            \"Docker\",\n            \"Kubernetes\",\n            \"Jenkins\",\n            \"Git\",\n            \"Agile\"\n        ],\n        \"soft_skills\": [\n            \"Communication\",\n            \"Teamwork\",\n            \"Problem-solving\",\n            \"Leadership\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"E-commerce Platform\",\n            \"skills\": [\n                \"React\",\n                \"Node.js\",\n                \"MongoDB\"\n            ],\n            \"responsibilities\": [\n                \"Developed the front-end interface using React.\",\n                \"Implemented the back-end API using Node.js and MongoDB.\",\n                \"Ensured the platform was scalable and secure.\"\n            ]\n        },\n        {\n            \"title\": \"Mobile App for Task Management\",\n            \"skills\": [\n                \"React Native\",\n                \"Firebase\"\n            ],\n            \"responsibilities\": [\n                \"Designed and developed a mobile app for task management.\",\n                \"Integrated with Firebase for real-time data synchronization.\",\n                \"Conducted user testing and gathered feedback.\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"AWS Certified Developer\",\n            \"issuer\": \"Amazon\",\n            \"year\": \"2022\"\n        },\n        {\n            \"title\": \"Certified Scrum Master\",\n            \"issuer\": \"Scrum Alliance\",\n            \"year\": \"2021\"\n        }\n    ],\n    \"search_summary\": \"The resume belongs to Jane Smith with emails jane.smith@example.com,jane.smith.work@example.com and phone numbers 123-456-7890,555-123-4567 located in New York,NewYork,USA.The candidate has 5.7 years of experience in Software Engineer,Software Developer,Senior Developer.Education:B.S(Bachelor of Science) in Computer Science Engineering from University of Technology.Skills:Java,Python,SQL,C++,JavaScript,React,AWS,Docker,Kubernetes,Jenkins,Git,Agile,Communication,Teamwork,Problem-solving,Leadership.Projects:E-commerce Platform,Mobile App for Task Management.Certifications:AWS Certified Developer,Certified Scrum Master.Languages:English(fluent),Spanish(intermediate).\",\n    \"raw_data\": {\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane.smith@example.com,jane.smith.work@example.com\",\n        \"phone\": \"123-456-7890,555-123-4567\",\n        \"location\": \"New York,New York,USA\",\n        \"expected_salary\": null,\n        \"summary\": \"A highly motivated and experienced professional with a background in computer science and a passion for software development. Proven ability to work independently and as part of a team to deliver high-quality solutions.\",\n        \"experience\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"Tech Solutions Inc.\",\n                \"Technology\": \"Java,Python,SQL,Agile\",\n                \"start_year\": \"01/2018\",\n                \"end_year\": \"12/2020\",\n                \"duration\": \"2.9\",\n                \"responsibilities\": \"Developed and maintained Java-based applications.Collaborated with cross-functional teams to deliver high-quality software.Implemented Agile development methodologies.\"\n            },\n            {\n                \"job_title\": \"Software Developer\",\n                \"company\": \"InnovateSoft\",\n                \"Technology\": \"C++,JavaScript,React,Git\",\n                \"start_year\": \"01/2021\",\n                \"end_year\": \"12/2022\",\n                \"duration\": \"1.9\",\n                \"responsibilities\": \"Designed and implemented new features for web applications.Participated in code reviews to ensure code quality.Utilized React for front-end development.\"\n            },\n            {\n                \"job_title\": \"Senior Developer\",\n                \"company\": \"Global Technologies\",\n                \"Technology\": \"AWS,Docker,Kubernetes,Jenkins\",\n                \"start_year\": \"01/2023\",\n                \"end_year\": \"12/2023\",\n                \"duration\": \"0.9\",\n                \"responsibilities\": \"Led a team of developers in building scalable cloud-based solutions.Implemented CI/CD pipelines using Jenkins.Managed infrastructure on AWS using Docker and Kubernetes.\"\n            }\n        ],\n        \"education\": [\n            {\n                \"degree_name\": \"Bachelor of Science\",\n                \"department\": \"Computer Science\",\n                \"institution\": \"University of Technology\",\n                \"start_year\": \"09/2014\",\n                \"end_year\": \"05/2018\",\n                \"duration\": \"4\",\n                \"cgpa\": \"3.8\"\n            }\n        ],\n        \"languages\": \"English(fluent),Spanish(intermediate)\",\n        \"skills\": \"Java,Python,SQL,C++,JavaScript,React,AWS,Docker,Kubernetes,Jenkins,Git,Agile,Communication,Teamwork,Problem-solving,Leadership\",\n        \"projects\": [\n            {\n                \"title\": \"E-commerce Platform\",\n                \"skills\": \"React,Node.js,MongoDB\",\n                \"responsibilities\": \"Developed the front-end interface using React.Implemented the back-end API using Node.js and MongoDB.Ensured the platform was scalable and secure.\"\n            },\n            {\n                \"title\": \"Mobile App for Task Management\",\n                \"skills\": \"React Native,Firebase\",\n                \"responsibilities\": \"Designed and developed a mobile app for task management.Integrated with Firebase for real-time data synchronization.Conducted user testing and gathered feedback.\"\n            }\n        ],\n        \"certificates\": \"AWS Certified Developer.Certified Scrum Master\",\n        \"search_summary\": null\n    }\n}\n```",
                ],
            },
        ]

10 feb old jd 
history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.\n\ncompany: The name of the hiring organization or company.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are specified, return an empty list.\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n\nresponsibilities: A list of key responsibilities for the job.\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: Any specific years mentioned for the degree (e.g., \"2020\", \"2023\"). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency)\n  - intermediate (for medium proficiency)\n  - basic (for low proficiency) based on the content you find out. If not specified, default to \"basic\".\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Marketing Executive\"\n  ],\n  \"company\": \"Netsurf Communications Pvt. Ltd.\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Pune\",\n      \"state\": \"Maharashtra\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Understanding the product and service offerings and developing marketing strategies to create awareness.\",\n    \"Strategizing on marketing campaigns to increase brand awareness and generate leads.\",\n    \"Preparing content for marketing campaigns.\",\n    \"Managing the company’s presence on social media platforms.\",\n    \"Managing content on the company’s website.\",\n    \"Analyzing marketing campaign performance.\",\n    \"Organizing events such as webinars and seminars.\",\n    \"Managing and adhering to the marketing budget.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Digital Marketing\",\n      \"Social Media Marketing\",\n      \"SEO\",\n      \"Google Analytics\",\n      \"Google Ads\",\n      \"Content Management Systems (CMS)\"\n    ],\n    \"soft\": [\n      \"Communication Skills\",\n      \"Analytical Skills\",\n      \"Budget Management\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Marketing\",\n      \"min_experience\": 2,\n      \"max_experience\": 3,\n      \"experience_range\": \"2-3\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"Bachelor\",\n      \"degree_name\": [\n        \"Bachelor of Business Administration\",\n        \"Bachelor of Marketing\"\n      ],\n      \"department\": [],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"English\",\n      \"proficiency\": \"fluent\"\n    }\n  ],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"The job description is for a Marketing Executive at Netsurf Communications Pvt. Ltd. in Pune. The role requires 2-3 years of experience in marketing, with responsibilities including developing marketing strategies, managing social media, content creation, event organization, and budget management. Key skills include Digital Marketing, Social Media Marketing, SEO, Google Analytics, Google Ads, and proficiency in English. A Bachelor's degree in Business Administration or Marketing is preferred.\",\n  \"raw_data\": {\n    \"job_titles\": \"Marketing Executive\",\n    \"company\": \"Netsurf Communications Pvt. Ltd.\",\n    \"locations\": \"Pune\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Understanding the product and service offerings and developing marketing strategies to create awareness.\\nStrategizing on marketing campaigns to increase brand awareness and generate leads.\\nPreparing content for marketing campaigns.\\nManaging the company’s presence on social media platforms.\\nManaging content on the company’s website.\\nAnalyzing marketing campaign performance.\\nOrganizing events such as webinars and seminars.\\nManaging and adhering to the marketing budget.\",\n    \"skills_required\": \"Digital Marketing, Social Media Marketing, SEO, Google Analytics, Google Ads, Content Management Systems (CMS) , Communication Skills and Analytical Skills\",\n    \"experience_required\": \"2-3 years of experience in marketing\",\n    \"education_required\": \"Bachelor's degree in Business Administration or Marketing\",\n    \"languages_required\": \"English\",\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"marketing strategies,managing social media, content creation, event organization, and budget management. bachelor degree in business administration ,marketing skills and experience.digital marketing, social media marketing, seo, google analytics, google ads and english proficiency\"\n  }\n}\n```",
                ],
            },
        ]

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [],\n  \"salary_details\": [],\n  \"responsibilities\": [],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": []\n  },\n  \"experience_required\": [],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"\",\n  \"raw_data\": {\n    \"job_titles\": null,\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": null,\n    \"salary_details\": null,\n    \"responsibilities\": null,\n    \"skills_required\": null,\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": null\n  }\n}\n```",
                ],
            },
        ]

correction of language,currency,[] and education

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be fresher , min_experience:0,max_experience:0,experience_range:0-0\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [],\n  \"salary_details\": [],\n  \"responsibilities\": [],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": []\n  },\n  \"experience_required\": [],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"\",\n  \"raw_data\": {\n    \"job_titles\": null,\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": null,\n    \"salary_details\": null,\n    \"responsibilities\": null,\n    \"skills_required\": null,\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": null\n  }\n}\n```",
                ],
            },
        ]

all correct jd just and or 

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Sales Executive\",\n    \"Business Development Executive\"\n  ],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales.\",\n    \"This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"communication\",\n      \"interpersonal\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\",\n  \"raw_data\": {\n    \"job_titles\": \"Sales Executive, Business Development Executive\",\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales. This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\",\n    \"skills_required\": \"communication, interpersonal\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\"\n  }\n}\n```",
                ],
            },
        ]

11 feb old
history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating list of the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null.A separate degree (if JD requires both degrees explicitly for example they want bachelor and master ).A combined degree list (if JD allows either of multiple degrees for example they want bachelor or master).\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": [\"string\",\"string\"],\n      \"degree_name\":[\"string\",\"string\"],\n      \"department\":[\"string\",\"string\"],\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    },\n    {\n      \"degree\": [\"string\"],\n      \"degree_name\":[\"string\",\"string\"],\n      \"department\":[\"string\",\"string\"],\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n    \n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Data Scientist\"\n  ],\n  \"company\": \"Databricks\",\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Work with our customers to understand their business needs and help them build solutions using the Databricks Lakehouse Platform\",\n    \"Develop data science and machine learning solutions to address a variety of business problems across industries\",\n    \"Build quick prototypes and develop production-quality code\",\n    \"Present technical solutions, product roadmaps, and thought leadership to customers\",\n    \"Collaborate with Databricks field teams and partner organizations to drive adoption of the Databricks platform\",\n    \"Mentor and train other team members on data science and machine learning best practices\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Python\",\n      \"Spark\",\n      \"SQL\",\n      \"Machine Learning\",\n      \"Deep Learning\",\n      \"Data Visualization\",\n      \"Cloud Computing\",\n      \"Data Modeling\",\n      \"Data Analysis\",\n      \"Data Engineering\"\n    ],\n    \"soft\": [\n      \"communication\",\n      \"presentation\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Data Science\",\n      \"min_experience\": 5,\n      \"max_experience\": 8,\n      \"experience_range\": \"5-8\",\n      \"experience_type\": \"Experienced\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"The job description is for a Data Scientist at Databricks. Responsibilities include working with customers to build solutions using the Databricks Lakehouse Platform, developing data science and machine learning solutions, building prototypes and production-quality code, and presenting technical solutions. Technical skills required include Python, Spark, SQL, Machine Learning, Deep Learning, Data Visualization, Cloud Computing, Data Modeling, Data Analysis, and Data Engineering. Soft skills include communication and presentation. The role requires 5-8 years of experience in Data Science.\",\n  \"raw_data\": {\n    \"job_titles\": \"Data Scientist\",\n    \"company\": \"Databricks\",\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Work with our customers to understand their business needs and help them build solutions using the Databricks Lakehouse Platform\\nDevelop data science and machine learning solutions to address a variety of business problems across industries\\nBuild quick prototypes and develop production-quality code\\nPresent technical solutions, product roadmaps, and thought leadership to customers\\nCollaborate with Databricks field teams and partner organizations to drive adoption of the Databricks platform\\nMentor and train other team members on data science and machine learning best practices\",\n    \"skills_required\": \"Python, Spark, SQL, Machine Learning, Deep Learning, Data Visualization, Cloud Computing, Data Modeling, Data Analysis, Data Engineering, communication, presentation\",\n    \"experience_required\": \"5-8 years of experience in Data Science\",\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"The job description is for a Data Scientist at Databricks. Responsibilities include working with customers to build solutions using the Databricks Lakehouse Platform, developing data science and machine learning solutions, building prototypes and production-quality code, and presenting technical solutions. Technical skills required include Python, Spark, SQL, Machine Learning, Deep Learning, Data Visualization, Cloud Computing, Data Modeling, Data Analysis, and Data Engineering. Soft skills include communication and presentation. The role requires 5-8 years of experience in Data Science.\"\n  }\n}\n```",
                ],
            },
        ]


history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree: A list of degree types (e.g., \"Bachelor\", \"Master\", \"Doctor\").\nIf the JD explicitly requires both degrees (e.g., \"Bachelor and Master\"), return them separately.\nIf the JD allows either of multiple degrees (e.g., \"Bachelor or Master\"), return a combined list.\nFor 10th and 12th grade, use \"Secondary\" and \"Pre-degree\" respectively.\nIf the degree is missing, infer it based on the degree_name. If it cannot be inferred, return null.\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": [\"string\",\"string\"],\n      \"degree_name\":[\"string\",\"string\"],\n      \"department\":[\"string\",\"string\"],\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    },\n    {\n      \"degree\": [\"string\"],\n      \"degree_name\":[\"string\",\"string\"],\n      \"department\":[\"string\",\"string\"],\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n    \n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Customer Service Representative\"\n  ],\n  \"company\": \"Concentrix\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Gurgaon\",\n      \"state\": \"Haryana\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"Handle inbound and outbound calls to assist customers with their inquiries.\",\n    \"Provide accurate and efficient responses to customer questions and concerns.\",\n    \"Document all customer interactions and resolutions in a clear and concise manner.\",\n    \"Follow up with customers to ensure their issues are resolved to their satisfaction.\",\n    \"Meet or exceed daily and monthly performance goals.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"Excellent Communication Skills\",\n      \"Problem-Solving Skills\",\n      \"Customer Service Skills\",\n      \"Multi-tasking skills\",\n      \"Teamwork\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [\n    {\n      \"language\": \"English\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"Hindi\",\n      \"proficiency\": \"fluent\"\n    }\n  ],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"The job description is for a Customer Service Representative position at Concentrix in Gurgaon. The role involves handling customer inquiries, providing solutions, documenting interactions, and meeting performance goals. Required skills include excellent communication, problem-solving, customer service, and multi-tasking. Candidate must know English and Hindi Languages.Skills include Excellent Communication Skills, Problem-Solving Skills, Customer Service Skills, Multi-tasking skills, Teamwork.Location is Gurgaon.\",\n  \"raw_data\": {\n    \"job_titles\": \"Customer Service Representative\",\n    \"company\": \"Concentrix\",\n    \"locations\": \"Gurgaon\",\n    \"employment_type\": \"Full Time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"Handle inbound and outbound calls to assist customers with their inquiries.\\nProvide accurate and efficient responses to customer questions and concerns.\\nDocument all customer interactions and resolutions in a clear and concise manner.\\nFollow up with customers to ensure their issues are resolved to their satisfaction.\\nMeet or exceed daily and monthly performance goals.\",\n    \"skills_required\": \"Excellent Communication Skills\\nProblem-Solving Skills\\nCustomer Service Skills\\nMulti-tasking skills\\nTeamwork\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": \"English and Hindi\",\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": null\n  }\n}\n```",
                ],
            },
        ]

all good

history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Sales Executive\",\n    \"Business Development Executive\"\n  ],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales.\",\n    \"This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"communication\",\n      \"interpersonal\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\",\n  \"raw_data\": {\n    \"job_titles\": \"Sales Executive, Business Development Executive\",\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales. This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\",\n    \"skills_required\": \"communication, interpersonal\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\"\n  }\n}\n```",
                ],
            },
        ]


history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").doesn't combine combine of skills like example experience in java and python comes skills python in one dict and java in one dict\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,locations,employment_type,salary and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering) comes like a big paragraph it include all the sentence in that jd \n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Inside Sales Representative\"\n  ],\n  \"company\": \"Nexplace\",\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [\n    {\n      \"salary\": \"40,000-60,000\",\n      \"currency\": \"INR\",\n      \"per\": \"per year\",\n      \"position\": \"Inside Sales Representative\"\n    }\n  ],\n  \"responsibilities\": [\n    \"Contacting potential clients through various channels (phone, email, social media)\",\n    \"Presenting our products and services to potential clients\",\n    \"Closing deals and generating revenue\",\n    \"Building and maintaining client relationships\",\n    \"Identifying new sales opportunities\",\n    \"Managing a sales pipeline\",\n    \"Meeting sales targets\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"CRM software\",\n      \"Sales Automation tools\"\n\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Sales\",\n      \"Client Relationship Management\",\n      \"Lead Generation\",\n      \"Negotiation\",\n      \"Closing\"\n\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": null,\n      \"degree_name\": [],\n      \"department\": [],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"English\",\n      \"proficiency\": \"fluent\"\n    }\n  ],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Nexplace is hiring for an Inside Sales Representative for a full-time position with a salary range of 40,000-60,000 INR per year.  Responsibilities include contacting potential clients, presenting products and services, closing deals, building client relationships, identifying sales opportunities, managing a sales pipeline, and meeting sales targets.  Required technical skills are CRM software and Sales Automation tools.  Necessary soft skills are communication, sales, client relationship management, lead generation, negotiation, and closing skills. Freshers with fluent English proficiency are encouraged to apply.\",\n  \"raw_data\": {\n    \"job_titles\": \"Inside Sales Representative\",\n    \"company\": \"Nexplace\",\n    \"locations\": \"Remote\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": \"INR 40,000 - 60,000 a year\",\n    \"responsibilities\": \"Contacting potential clients through various channels (phone, email, social media)\\nPresenting our products and services to potential clients\\nClosing deals and generating revenue\\nBuilding and maintaining client relationships\\nIdentifying new sales opportunities\\nManaging a sales pipeline\\nMeeting sales targets\",\n    \"skills_required\": \"Communication\\nSales\\nClient Relationship Management\\nLead Generation\\nNegotiation\\nClosing\\nCRM software\\nSales Automation tools\",\n    \"experience_required\": \"Fresher\",\n    \"education_required\": null,\n    \"languages_required\": \"English\",\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"additional_information\": null\n  }\n}\n```",
                ],
            },
        ]

12 feb full
def convert_text_to_jsonjd(text: str) -> dict:
    genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    generation_config = {
        "temperature": 1,
        "top_p": 0.95,
        "top_k": 40,
        "max_output_tokens": 8192,
        "response_mime_type": "application/json",
    }
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        generation_config=generation_config,
    )
    chat_session = model.start_chat(
        history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Sales Executive\",\n    \"Business Development Executive\"\n  ],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales.\",\n    \"This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"communication\",\n      \"interpersonal\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\",\n  \"raw_data\": {\n    \"job_titles\": \"Sales Executive, Business Development Executive\",\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales. This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\",\n    \"skills_required\": \"communication, interpersonal\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\"\n  }\n}\n```",
                ],
            },
        ]

    )
    response = chat_session.send_message(text)
    print("Raw response from Gemini AI:", response.text)
    generated_text=response.text
    try:
        print("working")
        structured_json = json.loads(generated_text)
        print(structured_json)
        return structured_json
    except Exception as e:
        return {"error": f"Failed to parse the response into JSON: {str(e)}"} 
    
def preprocess_jd(raw_text: dict) -> dict:
    """
    Preprocess JD raw text fields to remove unnecessary newlines and prepare structured data.
    """
    print("working")
    def clean_text(text):
        return text.replace("\n", " ").strip()
    
    processed_data = {}
    for key, value in raw_text.items():
        if value:  # Ensure value is not None
            processed_data[key] = clean_text(value)
        else:
            processed_data[key] = None
    print("Processed JD:", processed_data) 
    return processed_data

19 feb

def convert_text_to_jsonjd(text: str) -> dict:
    print(os.getenv("OPENAI_API_KEY"))
    client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    
    if not text or not isinstance(text, str):
        return {"error": "Invalid input: Text must be a non-empty string"}
        
    if not os.getenv("OPENAI_API_KEY"):
        return {"error": "OpenAI API key not found in environment variables"}

    try:
        client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    except Exception as e:
        return {"error": f"Failed to initialize OpenAI client: {str(e)}"}

    prompt = f"""
    Please extract the following details from the provided Job Description (JD) text and return them in a structured JSON format.Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.

Data Fields and Requirements:
job_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).

company: The name of the hiring organization or company.If not mentioned, return null.

locations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only "Hybrid", "Remote", "Work from Home", "Anywhere", etc., return [] (an empty list).
  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.
  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.
  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null
  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null

employment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).

salary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:
- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny 
- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.
- per: The time period for the salary (e.g., per hour, per month, per year).
- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as "all positions".
-If no salary details are found, return an empty list ([]).

responsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).

skills_required: A dictionary with the following structure:
- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).
- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).
-If no skills are mentioned, both lists should be empty ([]).

experience_required: A list of dictionaries where each dictionary contains:
- skills: The skill or technology for which the experience is required (e.g., "Java", "Project Management").doesn't combine combine of skills like example experience in java and python comes skills python in one dict and java in one dict
- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value
- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value
- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)
-experience_type:It should be Fresher or Experienced based on the content you should find out that.
Experience rules:
- If the JD mentions months, convert them into years (e.g., "6 months" becomes min_experience: 0.5, max_experience: 1).
- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.
- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.
- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.
- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 and experience_type:"Experienced"by default
-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)
-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.
-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:"Fresher"

education_required: A list of dictionaries containing the following:
-degree:A field indicating the degree type (e.g., "Bachelor", "Master", "Doctor", etc.).let us consider pre_degree use for 12 and secondary use for 10 as a degree.if the degree is not mentioned infer the degree based on degree_name .if missing return null
- degree_name:list of degree name based on the specific degree.The degree name must be converted to its full form (e.g., "B.E." covert to "Bachelor of Engineering"). For 10th and 12th grades, use "SSLC" and "Higher Secondary" as degree_name respectively. if the degree_name is not mentioned infer the degree_name based on the department name or degree.If missing, return [].
- department: list of department based on the degree name.The department name must be converted to its full form (e.g., "CSE" convert to "Computer Science Engineering"). If missing, return [].
- year: All the specific years mentioned for the degree (e.g., "2020", "2023").If a range is provided (e.g., "2019 to 2023"), include all years in that range (["2019", "2020", "2021", "2022", "2023"]). If not provided, return an empty list ([]).
- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.
- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.
Before a specific year (e.g., "before 2023"): Set the max_year to that year and leave min_year as null.
After a specific year (e.g., "after 2023"): Set the min_year to that year and leave max_year as null.
Exact year (e.g., "2023"): Set both min_year and max_year to that year.
A range of years (e.g., "2019 to 2023"): Set min_year and max_year based on the range.
If no specific years or conditions are mentioned, both min_year and max_year should be null.
- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. if percentage is provide directly include it. If both are missing, return null.

languages_required: A list of dictionaries containing the following:
- language: The language name (e.g., "English", "Spanish").
- proficiency: The proficiency level classified as:
  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)
  - intermediate (for medium proficiency,Conversational,)
  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to "basic".
-If no languages are found, return an empty list ([]).

post_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.

end_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.

contact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).

additional_information: Any other relevant details or notes in the JD.

jd_summary: 
- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,locations,employment_type,salary and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering) comes like a big paragraph it include all the sentence in that jd education all comes with full form for eample bachelor in cse then comes like B.E(Bachelor of Engineering) in cse(computer science engineering)

raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.
for example in text Company Name: Yuvan comes with "job_titles":"Yuvan"
    <Job Description>
    {text}
    </Job Description>

    **Return JSON Format:**  
    (Ensure all values are properly structured as strings and lists)
    
    {{"job_titles": ["string1", "string2"],
    "company": "string",
    "locations": [
    {{"street": "string", "district": "string", "state": "string", "country": "string"}}
    ],
    "employment_type": ["Full-time"],
    "salary_details": [
    {{"salary": "string", "currency": "string", "per": "string", "position": "string"}}
    ],
    "responsibilities": ["string"],
    "skills_required": {{"technical": ["string"], "soft": ["string"]}},
    "experience_required": [
    {{"skills": "string", "min_experience": 0, "max_experience": 0, "experience_range":"0-0", "experience_type": "Fresher"}}
    ],
    "education_required": [
    {{"degree": "string", "degree_name":["string"], "department":["string"], "year": ["string"], "min_year": "string", "max_year": "string", "cgpa": "string"}}
    ],
    "languages_required": [
    {{"language": "string", "proficiency": "fluent"}}
    ],
    "post_date": "dd/mm/yyyy",
    "end_date": "dd/mm/yyyy",
    "contact_us": [{{
      "type": "string", "value": "string"
    }}],
    "additional_information": "string",
    "jd_summary": "string",
    "raw_data": {{"job_titles": "Raw text for job titles values "}}
    }}

    Extract details accurately. Do not add extra fields.
    """

    try:
        print("start1")
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "You are an AI that extracts structured data from job descriptions."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.2,
            response_format={"type": "json_object"}

        )
        print(response)
        print("start2")
        if not response.choices[0].message.content:
            return {"error": "Empty response from API"}
        try:
            return json.loads(response.choices[0].message.content)
        except JSONDecodeError as jde:
            print(f"JSON Parse Error: {jde}")
            return {"error": "Invalid JSON received from API"}
        """structured_data = json.loads(response.choices[0].message.content)
        print("hi")
        print(structured_data)

        return structured_data"""

    except Exception as e:
        print(f"Error: {e}")
        return {"error": "Failed to extract job description data"}
    
    20 feb jd prompt update year,responsibilities
    
history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Sales Executive\",\n    \"Business Development Executive\"\n  ],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales.\",\n    \"This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"communication\",\n      \"interpersonal\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\",\n  \"raw_data\": {\n    \"job_titles\": \"Sales Executive, Business Development Executive\",\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales. This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\",\n    \"skills_required\": \"communication, interpersonal\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\"\n  }\n}\n```",
                ],
            },
        ]


history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found,comes with what they are provide without any modifications return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").doesn't combine combine of skills like example experience in java and python comes skills python in one dict and java in one dict\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). if they provide before 2023 or after 2023 comes with [\"before 2023\"] or [\"after 2023\"].if they metion only one year complete in 2023 then comes with [\"2023\"].If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,locations,employment_type,salary and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering) comes like a big paragraph it include all the sentence in that jd \n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\",\n      \"experience_type\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\",\n      \"experience_type\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Salesforce Developer\"\n  ],\n  \"company\": \"Cloud Analogy\",\n  \"locations\": [\n    {\n      \"street\": null,\n      \"district\": \"Bengaluru\",\n      \"state\": \"Karnataka\",\n      \"country\": \"India\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [\n    {\n      \"salary\": \"8,00,000-15,00,000\",\n      \"currency\": \"INR\",\n      \"per\": \"per year\",\n      \"position\": \"all positions\"\n    }\n  ],\n  \"responsibilities\": [\n    \"Developing customized solutions within the Salesforce platform.\",\n    \"Designing, coding, and implementing Salesforce applications.\",\n    \"Creating timelines and development goals.\",\n    \"Testing the stability and functionality of applications.\",\n    \"Troubleshooting and fixing bugs.\",\n    \"Writing documents and providing technical training for Salesforce Staff.\",\n    \"Maintaining the security and integrity of the application software.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Salesforce\",\n      \"Apex\",\n      \"Visualforce\",\n      \"Lightning Web Components\",\n      \"APIs\",\n      \"SOQL\",\n      \"SOSL\"\n\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Problem-solving\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Salesforce\",\n      \"min_experience\": 2,\n      \"max_experience\": 5,\n      \"experience_range\": \"2-5\",\n      \"experience_type\": \"Experienced\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"Bachelor\",\n      \"degree_name\": [\n        \"Bachelor of Engineering\",\n        \"Bachelor of Technology\"\n      ],\n      \"department\": [\n        \"Computer Science Engineering\",\n        \"Information Technology\"\n      ],\n      \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Cloud Analogy is hiring for a full-time Salesforce Developer in Bengaluru, Karnataka, India. The salary range is 8,00,000-15,00,000 INR per year. Responsibilities include developing customized Salesforce solutions, designing and implementing applications, testing, troubleshooting, and training staff.  Required technical skills are Salesforce, Apex, Visualforce, Lightning Web Components, APIs, SOQL, and SOSL. Soft skills include communication and problem-solving.  2-5 years of experience in Salesforce is required. Candidates should have a B.E.(Bachelor of Engineering) / B.Tech(Bachelor of Technology) degree in CSE(Computer Science Engineering) / IT(Information Technology).\",\n  \"raw_data\": {\n    \"job_titles\": \"Salesforce Developer\",\n    \"company\": \"Cloud Analogy\",\n    \"locations\": \"Bengaluru, Karnataka, India\",\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": \"8,00,000-15,00,000 INR per year\",\n    \"responsibilities\": \"Developing customized solutions within the Salesforce platform.\\nDesigning, coding, and implementing Salesforce applications.\\nCreating timelines and development goals.\\nTesting the stability and functionality of applications.\\nTroubleshooting and fixing bugs.\\nWriting documents and providing technical training for Salesforce Staff.\\nMaintaining the security and integrity of the application software.\",\n    \"skills_required\": \"Technical Skills: Salesforce, Apex, Visualforce, Lightning Web Components, APIs, SOQL, SOSL\\nSoft Skills: Communication, Problem-solving\",\n    \"experience_required\": \"2-5 years of experience in Salesforce.\",\n    \"education_required\": \"B.E. / B.Tech in CSE / IT\",\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"additional_information\": null\n  }\n}\n```",
                ],
            },
        ]


22 feb

history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below.  If an entire object (like location, expected_salary) has all its fields as null, return an empty dictionary {} instead.If any value is missing or unavailable, return null for that field.\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the individual. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\nSummary:\n- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.\n\nExperience:\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification with:\n  -degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 as a degree and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n  - degree_name: Convert the degree_name into its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. If degree_name is not mentioned infer the degree_name based on department.If missing, return null.\n  - department: Convert the department name into its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return null.\n  - institution: Name of the college or university. If missing, return null.\n  - start_year: Extract the start year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only . If missing, return null.\n  - end_year: Extract the end year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only. If missing, return null. If only one year is mentioned, infer whether it is the start year or end year based on the context. If missing, return null.\n  - duration: Calculate the duration of year for the specific degree. It should come with integer not float.\n  - cgpa: If a percentage is provided, store it directly as the percentage value. If CGPA is provided, convert it to a percentage using the formula: CGPA * 10. If the value is missing, return 0.\n\nLanguages:\n- A list of dictionaries containing the following:\n  - language: The language name (e.g., \"English\", \"Spanish\").\n  - proficiency: The proficiency level classified as: fluent (for high proficiency), intermediate (for medium proficiency), basic (for low proficiency) based on the content you find out. If not specified, it will default to \"basic\" proficiency.\n\nSkills:\n- skills: Separate all skills into two categories:\n  - technical_skills: List of all the technical skills or technologies (e.g., Java, Python, React). If missing, return an empty list [].you will find out and give all the technical skills mentioned in the resume not only in skils part but also in all part(for example in experience,project,certificates,achievement...)\n  - soft_skills: List of all the non-technical or interpersonal skills (e.g., communication, teamwork, leadership). If missing, return an empty list [].\n\nProjects:\n- List each project with:\n  - title: Project name. If missing, return null.\n  - skills: Key skills or technologies used for the project. If missing, return an empty list [].\n  - responsibilities: Key tasks or contributions. If missing, return an empty list [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide \n\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.\nskills-It is a string comes with comma seperated \ncertificates-It is a string comes with dot sepearted for one certificate to another\nprojects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\n\nOutput Format:\njson\n\n{\n    \"name\": \"string\",\n    \"email\": [\"string\", \"string\"],\n    \"phone\": [\"string\", \"string\"],\n    \"location\": {\n        \"street\": \"string\",\n        \"district\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": \"string\",\n        \"per\": \"string\"\n    },\n    \"summary\": \"string\",\n    \"experience\": {\n    \n    \"job\": [\n        {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n        }\n    ],\n    \"total_duration\":\"X.Y\"\n    }\n\n    ,\n    \"education\": [\n        {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n        }\n    ],\n    \"search_summary\": \"string\",\n    \"raw_data\":{\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"phone\": \"string\",\n    \"location\": \"string\",\n    \"expected_salary\": \"string\",\n    \"summary\": \"string\",\n    \"experience\": [\n        {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"education\": [\n        {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\":\"string\",\n    \"skills\": \"string\",\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"certificates\": \"string\",\n    \"search_summary\": \"string\"\n }\n    \n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n    \"name\": \"Ramesh Kumar S\",\n    \"email\": [\n        \"rameshkumars@gmail.com\"\n    ],\n    \"phone\": [\n        \"9148465152\"\n    ],\n    \"location\": {\n        \"street\": null,\n        \"district\": \"Chennai\",\n        \"state\": \"Tamil Nadu\",\n        \"country\": \"India\"\n    },\n    \"expected_salary\": {},\n    \"summary\": \"null\",\n    \"experience\": {\n        \"job\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"ZOHO Corporation\",\n                \"technology\": [\n                    \"Java\",\n                    \"MySQL\",\n                    \"Spring Boot\",\n                    \"Microservices\",\n                    \"AWS\",\n                    \"Kafka\",\n                    \"MongoDB\"\n                ],\n                \"start_year\": \"01/2022\",\n                \"end_year\": \"09/2023\",\n                \"duration\": \"1.7\",\n                \"responsibilities\": [\n                    \"Developed and maintained microservices using Java and Spring Boot, ensuring high availability and scalability.\",\n                    \"Worked with Kafka for real-time data streaming and processing, enhancing system responsiveness.\",\n                    \"Utilized AWS services for cloud deployment and infrastructure management, optimizing costs and performance.\",\n                    \"Integrated MongoDB for flexible data storage solutions, improving data accessibility.\",\n                    \"Contributed to database design and optimization using MySQL, ensuring data integrity and efficiency.\",\n                    \"Collaborated with cross-functional teams to deliver high-quality software solutions.\"\n                ]\n            }\n        ],\n        \"total_duration\": \"1.7\"\n    },\n    \"education\": [\n        {\n            \"degree\": \"Bachelor\",\n            \"degree_name\": \"Bachelor of Engineering\",\n            \"department\": \"Electronics and Communication Engineering\",\n            \"institution\": \"Anna University\",\n            \"start_year\": \"08/2018\",\n            \"end_year\": \"05/2022\",\n            \"duration\": \"4\",\n            \"cgpa\": \"85.0\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"English\",\n            \"proficiency\": \"fluent\"\n        },\n        {\n            \"language\": \"Tamil\",\n            \"proficiency\": \"fluent\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"Java\",\n            \"Spring Boot\",\n            \"Microservices\",\n            \"AWS\",\n            \"Kafka\",\n            \"MongoDB\",\n            \"MySQL\",\n            \"HTML\",\n            \"CSS\",\n            \"JavaScript\"\n        ],\n        \"soft_skills\": [\n            \"Problem-solving\",\n            \"Teamwork\",\n            \"Communication\",\n            \"Adaptability\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"Smart Home Automation System\",\n            \"skills\": [\n                \"Java\",\n                \"IoT\",\n                \"Microcontrollers\"\n            ],\n            \"responsibilities\": [\n                \"Developed a smart home system using Java and IoT technologies.\",\n                \"Implemented remote control of home appliances using microcontrollers.\",\n                \"Ensured seamless integration and user-friendly interface.\"\n            ]\n        },\n        {\n            \"title\": \"E-commerce Platform Development\",\n            \"skills\": [\n                \"Spring Boot\",\n                \"React\",\n                \"MySQL\"\n            ],\n            \"responsibilities\": [\n                \"Developed an e-commerce platform using Spring Boot for backend and React for frontend.\",\n                \"Implemented user authentication, product catalog, and shopping cart functionalities.\",\n                \"Ensured secure payment gateway integration and efficient order management.\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"AWS Certified Developer – Associate\",\n            \"issuer\": \"Amazon Web Services (AWS)\",\n            \"year\": \"2023\"\n        },\n        {\n            \"title\": \"Oracle Certified Java Associate\",\n            \"issuer\": \"Oracle\",\n            \"year\": \"2021\"\n        }\n    ],\n    \"search_summary\": \"Ramesh Kumar S, email: rameshkumars@gmail.com, phone: 9148465152, location: Chennai(district), TamilNadu(state), India(country). Experience: Software Engineer at ZOHO Corporation with Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB. Education: B.E(Bachelor of Engineering) in Electronics and Communication Engineering from Anna University. Skills: Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability. Certificates: AWS Certified Developer – Associate, Oracle Certified Java Associate. Projects: Smart Home Automation System with Java, IoT, Microcontrollers; E-commerce Platform Development with Spring Boot, React, MySQL. Languages: English(fluent), Tamil(fluent).\",\n    \"raw_data\": {\n        \"name\": \"Ramesh Kumar S\",\n        \"email\": \"rameshkumars@gmail.com\",\n        \"phone\": \"9148465152\",\n        \"location\": \"Chennai, Tamil Nadu\",\n        \"expected_salary\": null,\n        \"summary\": null,\n        \"experience\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"ZOHO Corporation\",\n                \"Technology\": \"Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB\",\n                \"start_year\": \"01/2022\",\n                \"end_year\": \"09/2023\",\n                \"duration\": \"1.7\",\n                \"responsibilities\": \"Developed and maintained microservices using Java and Spring Boot, ensuring high availability and scalability. Worked with Kafka for real-time data streaming and processing, enhancing system responsiveness. Utilized AWS services for cloud deployment and infrastructure management, optimizing costs and performance. Integrated MongoDB for flexible data storage solutions, improving data accessibility. Contributed to database design and optimization using MySQL, ensuring data integrity and efficiency. Collaborated with cross-functional teams to deliver high-quality software solutions.\"\n            }\n        ],\n        \"education\": [\n            {\n                \"degree_name\": \"Bachelor of Engineering\",\n                \"department\": \"Electronics and Communication Engineering\",\n                \"institution\": \"Anna University\",\n                \"start_year\": \"08/2018\",\n                \"end_year\": \"05/2022\",\n                \"duration\": \"4\",\n                \"cgpa\": \"85.0\"\n            }\n        ],\n        \"languages\": \"English(fluent),Tamil(fluent)\",\n        \"skills\": \"Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability\",\n        \"projects\": [\n            {\n                \"title\": \"Smart Home Automation System\",\n                \"skills\": \"Java, IoT, Microcontrollers\",\n                \"responsibilities\": \"Developed a smart home system using Java and IoT technologies. Implemented remote control of home appliances using microcontrollers. Ensured seamless integration and user-friendly interface.\"\n            },\n            {\n                \"title\": \"E-commerce Platform Development\",\n                \"skills\": \"Spring Boot, React, MySQL\",\n                \"responsibilities\": \"Developed an e-commerce platform using Spring Boot for backend and React for frontend. Implemented user authentication, product catalog, and shopping cart functionalities. Ensured secure payment gateway integration and efficient order management.\"\n            }\n        ],\n        \"certificates\": \"AWS Certified Developer – Associate.Oracle Certified Java Associate\",\n        \"search_summary\": \"Ramesh Kumar S, email: rameshkumars@gmail.com, phone: 9148465152, location: Chennai(district), TamilNadu(state), India(country). Experience: Software Engineer at ZOHO Corporation with Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB. Education: B.E(Bachelor of Engineering) in Electronics and Communication Engineering from Anna University. Skills: Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability. Certificates: AWS Certified Developer – Associate, Oracle Certified Java Associate. Projects: Smart Home Automation System with Java, IoT, Microcontrollers; E-commerce Platform Development with Spring Boot, React, MySQL. Languages: English(fluent), Tamil(fluent).\"\n    }\n}\n```",
                ],
            },
        ]

24 feb

def convert_text_to_jsonjd(text: str) -> dict:
    genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    generation_config = {
        "temperature": 1,
        "top_p": 0.95,
        "top_k": 40,
        "max_output_tokens": 8192,
        "response_mime_type": "application/json",
    }
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        generation_config=generation_config,
    )
    chat_session = model.start_chat(
        history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found,comes with what they are provide without any modifications return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").doesn't combine combine of skills like example experience in java and python comes skills python in one dict and java in one dict.if doen't mention the technical skills comes with null.\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). if they provide before 2023 or after 2023 comes with [\"before 2023\"] or [\"after 2023\"].if they metion only one year complete in 2023 then comes with [\"2023\"].If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,locations,employment_type,salary and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering) comes like a big paragraph it include all the sentence in that jd \n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\",\n      \"experience_type\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\",\n      \"experience_type\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Senior Software Engineer\",\n    \"Software Engineer\"\n  ],\n  \"company\": \"XYZ Tech Solutions\",\n  \"locations\": [\n    {\n      \"street\": \"123 Main Street\",\n      \"district\": \"Bangalore Urban\",\n      \"state\": \"Karnataka\",\n      \"country\": \"India\"\n    },\n    {\n      \"street\": null,\n      \"district\": \"New York City\",\n      \"state\": \"New York\",\n      \"country\": \"USA\"\n    }\n  ],\n  \"employment_type\": [\n    \"Full-time\",\n    \"Contractual\"\n  ],\n  \"salary_details\": [\n    {\n      \"salary\": \"100,000-150,000\",\n      \"currency\": \"USD\",\n      \"per\": \"per year\",\n      \"position\": \"Senior Software Engineer\"\n    },\n    {\n      \"salary\": \"70,000-100,000\",\n      \"currency\": \"USD\",\n      \"per\": \"per year\",\n      \"position\": \"Software Engineer\"\n    }\n  ],\n  \"responsibilities\": [\n    \"Develop and maintain software applications\",\n    \"Collaborate with cross-functional teams\",\n    \"Troubleshoot and debug software issues\"\n  ],\n  \"skills_required\": {\n    \"technical\": [\n      \"Java\",\n      \"Python\",\n      \"AWS\"\n    ],\n    \"soft\": [\n      \"Communication\",\n      \"Problem-solving\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"Java\",\n      \"min_experience\": 3,\n      \"max_experience\": 5,\n      \"experience_range\": \"3-5\",\n      \"experience_type\": \"Experienced\"\n    },\n    {\n      \"skills\": \"Python\",\n      \"min_experience\": 1,\n      \"max_experience\": 2,\n      \"experience_range\": \"1-2\",\n      \"experience_type\": \"Experienced\"\n\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"Bachelor\",\n      \"degree_name\": [\n        \"Bachelor of Engineering\",\n        \"Bachelor of Technology\"\n      ],\n      \"department\": [\n        \"Computer Science Engineering\",\n        \"Information Technology\"\n      ],\n      \"year\": [\n        \"2020\",\n        \"2021\",\n        \"2022\",\n        \"2023\"\n      ],\n      \"min_year\": \"2020\",\n      \"max_year\": \"2023\",\n      \"cgpa\": \"70%\"\n    },\n    {\n      \"degree\": \"Master\",\n      \"degree_name\": [\n        \"Master of Science\"\n      ],\n      \"department\":[\"Computer Science\"],\n       \"year\": [],\n      \"min_year\": null,\n      \"max_year\": null,\n      \"cgpa\": null\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"English\",\n      \"proficiency\": \"fluent\"\n    }\n  ],\n  \"post_date\": \"15/07/2024\",\n  \"end_date\": \"31/08/2024\",\n  \"contact_us\": [\n    {\n      \"type\": \"email\",\n      \"value\": \"careers@xyztech.com\"\n    },\n    {\n      \"type\": \"website\",\n      \"value\": \"www.xyztech.com\"\n    }\n  ],\n  \"additional_information\": \"Applicants should be self-motivated and have a strong work ethic.\",\n  \"jd_summary\": \"XYZ Tech Solutions is looking for a Senior Software Engineer and Software Engineer to join their team in Bangalore, Karnataka, India and New York City, New York, USA. The positions are full-time and contractual. The salary for Senior Software Engineer is 100,000-150,000 USD per year and for Software Engineer 70,000-100,000 USD per year. Responsibilities include developing and maintaining software applications, collaborating with cross-functional teams, and troubleshooting software issues. Required skills include Java, Python, AWS, Communication, Problem-solving. Candidates should have 3-5 years of experience in Java, 1-2 of experience in Python. Educational requirements include B.E(Bachelor of Engineering) /B.Tech(Bachelor of Technology) in CSE(Computer Science Engineering)/IT(Information Technology) with a CGPA of 70% and passing years between 2020-2023.Master's degree(Master of Science) in Computer Science  is also preferred. Fluency in English is required. Apply by 31/08/2024.\",\n  \"raw_data\": {\n    \"job_titles\": \"Senior Software Engineer, Software Engineer\",\n    \"company\": \"XYZ Tech Solutions\",\n    \"locations\": \"123 Main Street, Bangalore, India; New York City, USA\",\n    \"employment_type\": \"Full-time, Contractual\",\n    \"salary_details\": \"Senior Software Engineer: $100,000-$150,000/year; Software Engineer: $70,000-$100,000/year\",\n    \"responsibilities\": \"Develop and maintain software applications; Collaborate with cross-functional teams; Troubleshoot and debug software issues\",\n    \"skills_required\": \"Technical Skills: Java, Python, AWS; Soft Skills: Communication, Problem-solving\",\n    \"experience_required\": \"3-5 years of experience in Java; 1-2 years of experience in Python\",\n    \"education_required\": \"B.E/B.Tech in CSE/IT with 70% CGPA (2020-2023); M.S in CS is preferred.\",\n    \"languages_required\": \"Fluent in English\",\n    \"post_date\": \"15/07/2024\",\n    \"end_date\": \"31/08/2024\",\n    \"contact_us\": \"careers@xyztech.com; www.xyztech.com\",\n    \"additional_information\": \"Applicants should be self-motivated and have a strong work ethic.\"\n  }\n}\n```",
                ],
            },
        ]   
    )
    response = chat_session.send_message(text)
    print("Raw response from Geminis AI:", response.text)
    generated_text=response.text
    try:
        print("working")
        structured_json = json.loads(generated_text)
        print(structured_json)
        return structured_json
    except Exception as e:
        return {"error": f"Failed to parse the response into JSON: {str(e)}"} 
    
    
def convert_text_to_json(text: str) -> dict:
    genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    generation_config = {
        "temperature": 1,
        "top_p": 0.95,
        "top_k": 40,
        "max_output_tokens": 8192,
        "response_mime_type": "application/json",
    }
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        generation_config=generation_config,
    )
    chat_session = model.start_chat(
        history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below.  If an entire object (like location, expected_salary) has all its fields as null, return an empty dictionary {} instead.If any value is missing or unavailable, return null for that field.\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the individual. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\nSummary:\n- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.\n\nExperience:\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification with:\n  -degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 as a degree and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n  - degree_name: Convert the degree_name into its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. If degree_name is not mentioned infer the degree_name based on department.If missing, return null.\n  - department: Convert the department name into its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return null.\n  - institution: Name of the college or university. If missing, return null.\n  - start_year: Extract the start year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only . If missing, return null.\n  - end_year: Extract the end year in mm/yyyy format or yyyy format based on the resume if mention month and year or years only. If missing, return null. If only one year is mentioned, infer whether it is the start year or end year based on the context. If missing, return null.\n  - duration: Calculate the duration of year for the specific degree. It should come with integer not float.\n  - cgpa: If a percentage is provided, store it directly as the percentage value. If CGPA is provided, convert it to a percentage using the formula: CGPA * 10. If the value is missing, return 0.\n\nLanguages:\n- A list of dictionaries containing the following:\n  - language: The language name (e.g., \"English\", \"Spanish\").\n  - proficiency: The proficiency level classified as: fluent (for high proficiency), intermediate (for medium proficiency), basic (for low proficiency) based on the content you find out. If not specified, it will default to \"basic\" proficiency.\n\nSkills:\n- skills: Separate all skills into two categories:\n  - technical_skills: List of all the technical skills or technologies (e.g., Java, Python, React). If missing, return an empty list [].you will find out and give all the technical skills mentioned in the resume not only in skils part but also in all part(for example in experience,project,certificates,achievement...)\n  - soft_skills: List of all the non-technical or interpersonal skills (e.g., communication, teamwork, leadership). If missing, return an empty list [].\n\nProjects:\n- List each project with:\n  - title: Project name. If missing, return null.\n  - skills: Key skills or technologies used for the project. If missing, return an empty list [].\n  - responsibilities: Key tasks or contributions. If missing, return an empty list [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide \n\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.\nskills-It is a string comes with comma seperated \ncertificates-It is a string comes with dot sepearted for one certificate to another\nprojects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\n\nOutput Format:\njson\n\n{\n    \"name\": \"string\",\n    \"email\": [\"string\", \"string\"],\n    \"phone\": [\"string\", \"string\"],\n    \"location\": {\n        \"street\": \"string\",\n        \"district\": \"string\",\n        \"state\": \"string\",\n        \"country\": \"string\"\n    },\n    \"expected_salary\": {\n        \"salary\": null,\n        \"currency\": \"string\",\n        \"per\": \"string\"\n    },\n    \"summary\": \"string\",\n    \"experience\": {\n    \n    \"job\": [\n        {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n        }\n    ],\n    \"total_duration\":\"X.Y\"\n    }\n\n    ,\n    \"education\": [\n        {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n        }\n    ],\n    \"search_summary\": \"string\",\n    \"raw_data\":{\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"phone\": \"string\",\n    \"location\": \"string\",\n    \"expected_salary\": \"string\",\n    \"summary\": \"string\",\n    \"experience\": [\n        {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"education\": [\n        {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n        }\n    ],\n    \"languages\":\"string\",\n    \"skills\": \"string\",\n    },\n    \"projects\": [\n        {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":\"string\"\n        }\n    ],\n    \"certificates\": \"string\",\n    \"search_summary\": \"string\"\n }\n    \n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n    \"name\": \"Ramesh Kumar S\",\n    \"email\": [\n        \"rameshkumars@gmail.com\"\n    ],\n    \"phone\": [\n        \"9148465152\"\n    ],\n    \"location\": {\n        \"street\": null,\n        \"district\": \"Chennai\",\n        \"state\": \"Tamil Nadu\",\n        \"country\": \"India\"\n    },\n    \"expected_salary\": {},\n    \"summary\": \"null\",\n    \"experience\": {\n        \"job\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"ZOHO Corporation\",\n                \"technology\": [\n                    \"Java\",\n                    \"MySQL\",\n                    \"Spring Boot\",\n                    \"Microservices\",\n                    \"AWS\",\n                    \"Kafka\",\n                    \"MongoDB\"\n                ],\n                \"start_year\": \"01/2022\",\n                \"end_year\": \"09/2023\",\n                \"duration\": \"1.7\",\n                \"responsibilities\": [\n                    \"Developed and maintained microservices using Java and Spring Boot, ensuring high availability and scalability.\",\n                    \"Worked with Kafka for real-time data streaming and processing, enhancing system responsiveness.\",\n                    \"Utilized AWS services for cloud deployment and infrastructure management, optimizing costs and performance.\",\n                    \"Integrated MongoDB for flexible data storage solutions, improving data accessibility.\",\n                    \"Contributed to database design and optimization using MySQL, ensuring data integrity and efficiency.\",\n                    \"Collaborated with cross-functional teams to deliver high-quality software solutions.\"\n                ]\n            }\n        ],\n        \"total_duration\": \"1.7\"\n    },\n    \"education\": [\n        {\n            \"degree\": \"Bachelor\",\n            \"degree_name\": \"Bachelor of Engineering\",\n            \"department\": \"Electronics and Communication Engineering\",\n            \"institution\": \"Anna University\",\n            \"start_year\": \"08/2018\",\n            \"end_year\": \"05/2022\",\n            \"duration\": \"4\",\n            \"cgpa\": \"85.0\"\n        }\n    ],\n    \"languages\": [\n        {\n            \"language\": \"English\",\n            \"proficiency\": \"fluent\"\n        },\n        {\n            \"language\": \"Tamil\",\n            \"proficiency\": \"fluent\"\n        }\n    ],\n    \"skills\": {\n        \"technical_skills\": [\n            \"Java\",\n            \"Spring Boot\",\n            \"Microservices\",\n            \"AWS\",\n            \"Kafka\",\n            \"MongoDB\",\n            \"MySQL\",\n            \"HTML\",\n            \"CSS\",\n            \"JavaScript\"\n        ],\n        \"soft_skills\": [\n            \"Problem-solving\",\n            \"Teamwork\",\n            \"Communication\",\n            \"Adaptability\"\n        ]\n    },\n    \"projects\": [\n        {\n            \"title\": \"Smart Home Automation System\",\n            \"skills\": [\n                \"Java\",\n                \"IoT\",\n                \"Microcontrollers\"\n            ],\n            \"responsibilities\": [\n                \"Developed a smart home system using Java and IoT technologies.\",\n                \"Implemented remote control of home appliances using microcontrollers.\",\n                \"Ensured seamless integration and user-friendly interface.\"\n            ]\n        },\n        {\n            \"title\": \"E-commerce Platform Development\",\n            \"skills\": [\n                \"Spring Boot\",\n                \"React\",\n                \"MySQL\"\n            ],\n            \"responsibilities\": [\n                \"Developed an e-commerce platform using Spring Boot for backend and React for frontend.\",\n                \"Implemented user authentication, product catalog, and shopping cart functionalities.\",\n                \"Ensured secure payment gateway integration and efficient order management.\"\n            ]\n        }\n    ],\n    \"certificates\": [\n        {\n            \"title\": \"AWS Certified Developer – Associate\",\n            \"issuer\": \"Amazon Web Services (AWS)\",\n            \"year\": \"2023\"\n        },\n        {\n            \"title\": \"Oracle Certified Java Associate\",\n            \"issuer\": \"Oracle\",\n            \"year\": \"2021\"\n        }\n    ],\n    \"search_summary\": \"Ramesh Kumar S, email: rameshkumars@gmail.com, phone: 9148465152, location: Chennai(district), TamilNadu(state), India(country). Experience: Software Engineer at ZOHO Corporation with Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB. Education: B.E(Bachelor of Engineering) in Electronics and Communication Engineering from Anna University. Skills: Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability. Certificates: AWS Certified Developer – Associate, Oracle Certified Java Associate. Projects: Smart Home Automation System with Java, IoT, Microcontrollers; E-commerce Platform Development with Spring Boot, React, MySQL. Languages: English(fluent), Tamil(fluent).\",\n    \"raw_data\": {\n        \"name\": \"Ramesh Kumar S\",\n        \"email\": \"rameshkumars@gmail.com\",\n        \"phone\": \"9148465152\",\n        \"location\": \"Chennai, Tamil Nadu\",\n        \"expected_salary\": null,\n        \"summary\": null,\n        \"experience\": [\n            {\n                \"job_title\": \"Software Engineer\",\n                \"company\": \"ZOHO Corporation\",\n                \"Technology\": \"Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB\",\n                \"start_year\": \"01/2022\",\n                \"end_year\": \"09/2023\",\n                \"duration\": \"1.7\",\n                \"responsibilities\": \"Developed and maintained microservices using Java and Spring Boot, ensuring high availability and scalability. Worked with Kafka for real-time data streaming and processing, enhancing system responsiveness. Utilized AWS services for cloud deployment and infrastructure management, optimizing costs and performance. Integrated MongoDB for flexible data storage solutions, improving data accessibility. Contributed to database design and optimization using MySQL, ensuring data integrity and efficiency. Collaborated with cross-functional teams to deliver high-quality software solutions.\"\n            }\n        ],\n        \"education\": [\n            {\n                \"degree_name\": \"Bachelor of Engineering\",\n                \"department\": \"Electronics and Communication Engineering\",\n                \"institution\": \"Anna University\",\n                \"start_year\": \"08/2018\",\n                \"end_year\": \"05/2022\",\n                \"duration\": \"4\",\n                \"cgpa\": \"85.0\"\n            }\n        ],\n        \"languages\": \"English(fluent),Tamil(fluent)\",\n        \"skills\": \"Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability\",\n        \"projects\": [\n            {\n                \"title\": \"Smart Home Automation System\",\n                \"skills\": \"Java, IoT, Microcontrollers\",\n                \"responsibilities\": \"Developed a smart home system using Java and IoT technologies. Implemented remote control of home appliances using microcontrollers. Ensured seamless integration and user-friendly interface.\"\n            },\n            {\n                \"title\": \"E-commerce Platform Development\",\n                \"skills\": \"Spring Boot, React, MySQL\",\n                \"responsibilities\": \"Developed an e-commerce platform using Spring Boot for backend and React for frontend. Implemented user authentication, product catalog, and shopping cart functionalities. Ensured secure payment gateway integration and efficient order management.\"\n            }\n        ],\n        \"certificates\": \"AWS Certified Developer – Associate.Oracle Certified Java Associate\",\n        \"search_summary\": \"Ramesh Kumar S, email: rameshkumars@gmail.com, phone: 9148465152, location: Chennai(district), TamilNadu(state), India(country). Experience: Software Engineer at ZOHO Corporation with Java, MySQL, Spring Boot, Microservices, AWS, Kafka, MongoDB. Education: B.E(Bachelor of Engineering) in Electronics and Communication Engineering from Anna University. Skills: Java, Spring Boot, Microservices, AWS, Kafka, MongoDB, MySQL, HTML, CSS, JavaScript, Problem-solving, Teamwork, Communication, Adaptability. Certificates: AWS Certified Developer – Associate, Oracle Certified Java Associate. Projects: Smart Home Automation System with Java, IoT, Microcontrollers; E-commerce Platform Development with Spring Boot, React, MySQL. Languages: English(fluent), Tamil(fluent).\"\n    }\n}\n```",
                ],
            },
        ]
                   
    )
    response = chat_session.send_message(text)
    print("Raw response from Gemini AI:", response.text)
    generated_text=response.text
    try:
        structured_json= json.loads(generated_text)
        print(structured_json)
        return structured_json
    except Exception as e:
        return {"error": f"Failed to parse the response into JSON: {str(e)}"}
    
    
26 feb

def convert_text_to_json(text: str) -> dict:
    print(os.getenv("OPENAI_API_KEY"))
    client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    
    if not text or not isinstance(text, str):
        return {"error": "Invalid input: Text must be a non-empty string"}
        
    if not os.getenv("OPENAI_API_KEY"):
        return {"error": "OpenAI API key not found in environment variables"}

    try:
        client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
    except Exception as e:
        return {"error": f"Failed to initialize OpenAI client: {str(e)}"}

    prompt = f"""
    Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below.  If an entire object (like location, expected_salary) has all its fields as null, return an empty dictionary instead.If any value is missing or unavailable, return null for that field.


Data Fields and Requirements:

Personal Information:
- name: Full name of the person and carefully find out without making mistake of spelling and initial for the name and all letter should be capital. If missing, return null.
- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.
- phone: List all phone numbers provided in the resume. If missing, return an empty list [].

- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.
  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.carefully find out the street.If no such details are available, set this field to null.
  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.
  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null
  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null
  
- expected_salary:
  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)
  - currency: Currency used for the salary (if mentioned). If missing, return null.
  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.

Summary:
- summary: A brief professional overview highlighting the individual's expertise and experience. If missing, return null.

Experience:
- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0
-job:list of dictionary belowe mentioned details
  - job_title: Job title or designation. If missing, return null.
  - company: Company or organization name. If missing, return null.
  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.
  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.
  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., "3 years"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.
  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.
  - responsibilities: List of key job responsibilities. If missing, return an empty list [].

Education:
- List each qualification with:
1. degree (Mandatory):
Represents the type of degree (e.g., "Bachelor", "Master", "Doctor"). and these each should be in seperate dictionary and not include bachelor degree inside m.e,phd likewise.
If the degree is missing, infer it based on degree_name or department.
Special cases:
12th grade → "Higher Secondary"
10th grade → "Secondary"
If not found, return null.
2. degree_name (Short Form):
Extract the short form of the degree:
"Bachelor of Engineering" → "B.E."
"Bachelor of Technology" → "B.Tech"
"Master of Science" → "M.Sc"
10th and 12th grade degrees:
"10th" → "SSLC"
"12th" → "Higher Secondary"
If degree_name is missing, infer it from department.
If still missing, return null.
3. department (Short Form):
Extract the short form of the department:
"Computer Science Engineering" → "CSE"
"Information Technology" → "IT"
"Electronics and Communication Engineering" → "ECE"
If missing, return null.
4. institution (College/University Name)
Extract and return the name of the institution.
If missing, return null.
5. start_year (Date Extraction):
Extract the start year in mm/yyyy or yyyy format.
If only a single year is found, determine if it represents start_year or end_year based on context you should infer.
If missing, return null.
6. end_year (Date Extraction):
Extract the end year in mm/yyyy or yyyy format.
If only one year is mentioned, infer whether it is start_year or end_year.
If missing, return null.
7. duration (Integer):
Calculate the number of years for the degree.
It should always be an integer, not a float.
Example:
start_year = 2018, end_year = 2022 → duration = 4
If data is missing, return null.
8. cgpa (Numeric):
If percentage is provided, store it directly.
If CGPA is provided, convert it using:
CGPA × 10 = Percentage
Example: 8.5 CGPA → 85%
If missing, return 0.
example:
1.Bachelor’s or Master’s degree in Computer Science, Information Technology
output:
degree:"Bachelor",degree_name:["B.E"],department:["CSE","IT"]
degree:"Master",degree_name:["M.E"],department:["CSE","IT"]


Languages:A list of dictionaries containing the following:
- language: The language name (e.g., "English", "Spanish").
- proficiency: The proficiency level classified as: values should only be fluent or intermediate or basic not other.(based on the context you should understand and give a value on any(fluent,intermediate,basic))
  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional these all will considered as fluent)
  - intermediate (for medium proficiency,Conversational these all will be considered as intermediate)
  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to "basic".
-If no languages are found, return an empty list ([]).

Skills:
Extract all skills mentioned in the resume and categorize them into technical_skills and soft_skills as follows:
-technical_skills:
Identify all technologies, programming languages, frameworks, databases, tools, cloud services, AI/ML models, and software explicitly mentioned anywhere in the resume, including sections like experience, projects, certifications, achievements, and education.
Do not limit extraction to the "Skills" section—search throughout the resume.
Ensure no duplicate entries (avoid repeating the same word).
If no technical skills are found, return an empty list [].
and also if skills contain react js or react.js comes in react js not react.js
-soft_skills:
Extract all non-technical and interpersonal skills such as communication, teamwork, leadership, problem-solving, adaptability, time management, collaboration, etc.
These should be gathered from any relevant section of the resume.


projects:
Extract project details from the given resume. Each project should contain the following fields:
-title (Project Name): Extract the project name. If missing, return null.
-skills (Technologies Used): Identify the technologies, programming languages, frameworks, or tools explicitly mentioned as part of the project.
Ensure that only the technologies used in the project are included, not general skills and doesn't take from any other fields like skills,certificates.
If technologies, programming languages, frameworks, or tools are comes that should be comes in list of string eg["skill1","skill2"]
If no technologies are explicitly stated, return [].
-responsibilities (Key Contributions): Extract key contributions, tasks, or work done in the project. These could include development, testing, deployment, optimization, integration, etc.
Look for verbs like developed, designed, implemented, integrated, optimized, automated, built, tested, deployed, enhanced, configured, etc.
If responsibilities are implied but not explicitly mentioned, attempt to infer them from the project description.
Based on your clarification ("if there is no skills but there is workflow should come in responsibilities").
If there is one line or a sentence then comes in list of string based on the one sentence end dot.
If no responsibilities are found, return [].

Certificates:
- List each certificate or courses or achievement with:
  - title: Name of the certificate. If missing, return null.
  - issuer: Issuing organization and institute whatever they mention. If missing, return null.
  - year: Issuance year. If missing, return null.

Search Summary:
- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.and also provide 

raw_data:
-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot
email-It is a string comes with comma if there are two email
phone-It is a string comes with comma if there are two email
expected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).
location-it is a string comes like for ( if there are district comes with ditsrict,state,country)
experience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot
languages-It is string if more languages comes with comma (for example proficiency in english and also tamil comes with English(proficiency),Tamil.
skills-It is a string comes with comma seperated 
certificates-It is a string comes with dot sepearted for one certificate to another
projects-it is list of dict if skills has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot
    <Resume>
    {text}
    </Resume>

    **Return JSON Format:**  
    (Ensure all values are properly structured as strings and lists)
    
    {{
        "name": "string",
        "email": ["string", "string"],
        "phone": ["string", "string"],
        "location": {{
            "street": "string",
            "district": "string",
            "state": "string",
            "country": "string"
        }},
        "expected_salary": {{
            "salary": null,
            "currency": "string",
            "per": "string"
        }},
        "summary": "string",
        "experience": {{
    
            "job": [
            {{
            "job_title": "string",  
            "company": "string",  
            "Technology": ["string", "string"],  
            "start_year": "mm/yyyy",  
            "end_year": "mm/yyyy",  
            "duration": "X.Y",  
            "responsibilities": ["string", "string", "string"]  
           }}
        ],
            "total_duration":"X.Y"
        }},
        "education": [
            {{
            "degree":"string",
            "degree_name": "string",
            "department": "string",
            "institution": "string",
            "start_year": "mm/yyyy",
            "end_year": "mm/yyyy",
            "duration": "x",
            "cgpa": "string"
            }}
        ],
        "languages": [
            {{
            "language": "string",
            "proficiency": "string"
            }}
        ],
        "skills": {{
        "technical_skills": [
            "string",
            "string",
            "string"
        ],
        "soft_skills": [
            "string",
            "string",
            "string"
        ]
        }},
        "projects": [
            {{
            "title": "string",
            "skills": [
                "string",
                "string"
            ],
            "responsibilities": [
                "string",
                "string",
                "string"
            ]
            }}
        ],
        "certificates": [
            {{
            "title": "string",
            "issuer": "string",
            "year": "string"
            }}
        ],
        "search_summary": "string",
        "raw_data":{{
        "name": "string",
        "email": "string",
        "phone": "string",
        "location": "string",
        "expected_salary": "string",
        "summary": "string",
        "experience": [
            {{
            "job_title": "string",
            "company": "string",
            "Technology":"string",
            "start_year": "mm/yyyy",
            "end_year": "mm/yyyy",
            "duration": "X.Y",
            "responsibilities":"string"
            }}
        ],
        "education": [
            {{
            "degree_name": "string",
            "department": "string",
            "institution": "string",
            "start_year": "mm/yyyy",
            "end_year": "mm/yyyy",
            "duration": "x",
            "cgpa": "string"
            }}
        ],
        "languages":"string",
        "skills": "string",
        "projects": [
            {{
            "title": "string",
            "skills": "string",
            "responsibilities":"string"
            }}
        ],
        "certificates": "string",
        "search_summary": "string"
        }}
    }}

    Extract details accurately. Do not add extra fields.
    """

    try:
        print("start1")
        response = client.chat.completions.create(
            model="gpt-4o-mini",
            messages=[
                {"role": "system", "content": "You are an AI that extracts structured data from resumes."},
                {"role": "user", "content": prompt}
            ],
            temperature=0.2,
            response_format={"type": "json_object"}

        )
        print(response)
        print("start2")
        if not response.choices[0].message.content:
            return {"error": "Empty response from API"}
        try:
            return json.loads(response.choices[0].message.content)
        except JSONDecodeError as jde:
            print(f"JSON Parse Error: {jde}")
            return {"error": "Invalid JSON received from API"}
        """structured_data = json.loads(response.choices[0].message.content)
        print("hi")
        print(structured_data)

        return structured_data"""

    except Exception as e:
        print(f"Error: {e}")
        return {"error": "Failed to extract job description data"}


history=[
            {
                "role": "user",
                "parts": [
                    "Please extract the following details from the provided Job Description (JD) text. Return them in the structured JSON object format specified below(not a list of objects). Ensure each key in the JSON is a string, and values accurately reflect the details from the JD text.\n\nData Fields and Requirements:\njob_titles: A list of all job titles mentioned in the JD.If no titles are found, return an empty list ([]).\n\ncompany: The name of the hiring organization or company.If not mentioned, return null.\n\nlocations: A list of job locations, where each location is represented as a dictionary containing the following keys: Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.If no valid locations exist, return an empty list ([]) instead of null values and also If the location contains only \"Hybrid\", \"Remote\", \"Work from Home\", \"Anywhere\", etc., return [] (an empty list).\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n\nemployment_type: A list of employment types explicitly identified in the JD (e.g., Full-time, Part-time, Internship, Contractual etc.). you should understand the employment_type mentioned in jd and modify and infer Return only the types mentioned in the JD(Full-time, Part-time, Internship, Contractual). If none are found, return an empty list ([]).\n\nsalary_details: A list of dictionaries, where each dictionary represents details about the salary structure. Each dictionary should have the following keys:\n- salary: The numeric salary amount (if available).if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000) comma seperation based on salary curreny \n- currency: The currency of the salary (e.g., USD, EUR, INR).comes with proper currency codes.\n- per: The time period for the salary (e.g., per hour, per month, per year).\n- position: Whether the salary applies to specific job positions mentioned in the JD. If yes, return the position(s); otherwise, set it as \"all positions\".\n-If no salary details are found, return an empty list ([]).\n\nresponsibilities: A list of key responsibilities for the job.If none are found, return an empty list ([]).\n\nskills_required: A dictionary with the following structure:\n- technical: A list of technical skills required for the role (e.g., programming languages, software tools, frameworks).\n- soft: A list of soft skills required for the role (e.g., communication, teamwork, leadership).\n-If no skills are mentioned, both lists should be empty ([]).\n\nexperience_required: A list of dictionaries where each dictionary contains:\n- skills: The skill or technology for which the experience is required (e.g., \"Java\", \"Project Management\").\n- min_experience: The minimum years of experience required for that skill or technology.It should be numeric value\n- max_experience: The maximum years of experience required for that skill or technology.It should be numeric value\n- experience_range: take the min_experience and max_experience give in the range like min_experience-max_experience(for example min is 0 and max is 3 and then experience_range should be 0-3)\n-experience_type:It should be Fresher or Experienced based on the content you should find out that.\nExperience rules:\n- If the JD mentions months, convert them into years (e.g., \"6 months\" becomes min_experience: 0.5, max_experience: 1).\n- If a range (e.g., 3 to 5 years) is provided, set min_experience and max_experience accordingly.\n- If only a single year (e.g., 2 years) is mentioned, treat both min_experience and max_experience as that value.\n- If the JD does not mention any experience or years, set min_experience: 0 and max_experience: 0 by default.\n- If the jd mention only experience not giving years, set min_experience:0 and max_experience:1 by default\n-experience_range whatever you should take from the min_experience and max_experience and give in the format (min_experience-max_experience)\n-if the jd doesn't mention any experience and only mentioning fresher or not mentioning anything.\n-let us avoid of providing empty list in experience_required and return should be skills should be empty string, min_experience:0,max_experience:0,experience_range:0-0,experience_type:\"Fresher\"\n\neducation_required: A list of dictionaries containing the following:\n-degree:A field indicating the degree type (e.g., \"Bachelor\", \"Master\", \"Doctor\", etc.).let us consider pre_degree for 12 and secondary for 10 as a degree).if the degree is not mentioned infer the degree based on degree_name.if missing return null\n- degree_name:list of degree name based on the specific degree.The degree name converted to its full form (e.g., \"B.E.\" to \"Bachelor of Engineering\"). For 10th and 12th grades, use \"SSLC\" and \"Higher Secondary\" respectively. if the degree_name is not mentioned infer the degree_name based on the department name.If missing, return [].\n- department: list of department based on the degree name.The department name converted to its full form (e.g., \"CSE\" to \"Computer Science Engineering\"). If missing, return [].\n- year: All the specific years mentioned for the degree (e.g., \"2020\", \"2023\").If a range is provided (e.g., \"2019 to 2023\"), include all years in that range ([\"2019\", \"2020\", \"2021\", \"2022\", \"2023\"]). If not provided, return an empty list ([]).\n- min_year: The minimum year from the year list (as a string). If the year list is empty, return null.\n- max_year: The maximum year from the year list (as a string). If the year list is empty, return null.\nBefore a specific year (e.g., \"before 2023\"): Set the max_year to that year and leave min_year as null.\nAfter a specific year (e.g., \"after 2023\"): Set the min_year to that year and leave max_year as null.\nExact year (e.g., \"2023\"): Set both min_year and max_year to that year.\nA range of years (e.g., \"2019 to 2023\"): Set min_year and max_year based on the range.\nIf no specific years or conditions are mentioned, both min_year and max_year should be null.\n- cgpa: The CGPA mentioned. If provided, convert it to a percentage and include it. If missing, return null.\n\nlanguages_required: A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as:\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional)\n  - intermediate (for medium proficiency,Conversational,)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\npost_date: The application deadline or post date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\nend_date: The application deadline or end date for the job posting. Return the date in dd/mm/yyyy format. If no date is provided, return null.\n\ncontact_us: A list of contact methods, which could include one or more ways to get in touch with the company (e.g., phone number, website).\n\nadditional_information: Any other relevant details or notes in the JD.\n\njd_summary: \n- jd_summary: A brief summary of all elements extracted from the job description, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for jd matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)\n\nraw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., job_titles, company, locations) and contains the exact raw text from the JD used to extract that data.\n\nOutput Format:\njson\n{\n  \"job_titles\": [\"string1\", \"string2\", \"string3\"],\n  \"company\": \"string\",\n  \"locations\": [\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    },\n    {\n      \"street\": \"string\",\n      \"district\": \"string\",\n      \"state\": \"string\",\n      \"country\": \"string\"\n    }\n  ],\n  \"employment_type\": [\"Full-time\", \"Part-time\", \"Internship\", \"Contractual\"],\n  \"salary_details\": [\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    },\n    {\n      \"salary\": \"string\",\n      \"currency\": \"string\",\n      \"per\": \"string\",\n      \"position\": \"string\"\n    }\n  ],\n  \"responsibilities\": [\n    \"string\",\n    \"string\",\n    \"string\",\n  ],\n  \"skills_required\": {\n    \"technical\": [\"string\", \"string\", \"string\"],\n    \"soft\": [\"string\", \"string\"]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experience_range\":\"string\"\n    },\n    {\n      \"skills\": \"string\",\n      \"min_experience\": x,\n      \"max_experience\": x,\n      \"experiene_range\":\"string\"\n    }\n  ],\n  \"education_required\": [\n    {\n      \"degree\": \"string\",\n      \"degree_name\":[\"string\",\"string\"]\n      \"department\":[\"string\",\"string\"]\n      \"year\": [\"string\", \"string\"],\n      \"min_year\": \"string\",\n      \"max_year\": \"string\",\n      \"cgpa\": \"string\"\n    }\n  ],\n  \"languages_required\": [\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"string\",\n      \"proficiency\": \"intermediate\"\n    }\n  ],\n  \"post_date\": \"dd/mm/yyyy\",\n  \"end_date\": \"dd/mm/yyyy\",\n  \"contact_us\": [\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    },\n    {\n      \"type\": \"string\",\n      \"value\": \"string\"\n    }\n  ],\n  \"additional_information\": \"string\",\n  \"jd_summary\": \"string\",\n  \"raw_data\": {\n    \"job_titles\": \"Raw text for job titles.\",\n    \"company\": \"Raw text for company.\",\n    \"locations\": \"Raw text for locations.\",\n    \"employment_type\": \"Raw text for employment type.\",\n    \"salary_details\": \"Raw text for salary details.\",\n    \"responsibilities\": \"Raw text for responsibilities.\",\n    \"skills_required\": \"Raw text for skills required.\",\n    \"experience_required\": \"Raw text for experience required.\",\n    \"education_required\": \"Raw text for education required.\",\n    \"languages_required\": \"Raw text for languages required.\",\n    \"post_date\": \"Raw text for post date.\",\n    \"end_date\": \"Raw text for end date.\",\n    \"contact_us\": \"Raw text for contact us.\",\n    \"jd_summary\": \"Raw text for jd summary.\"\n  }\n}",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"job_titles\": [\n    \"Sales Executive\",\n    \"Business Development Executive\"\n  ],\n  \"company\": null,\n  \"locations\": [],\n  \"employment_type\": [\n    \"Full-time\"\n  ],\n  \"salary_details\": [],\n  \"responsibilities\": [\n    \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales.\",\n    \"This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\"\n  ],\n  \"skills_required\": {\n    \"technical\": [],\n    \"soft\": [\n      \"communication\",\n      \"interpersonal\"\n    ]\n  },\n  \"experience_required\": [\n    {\n      \"skills\": \"\",\n      \"min_experience\": 0,\n      \"max_experience\": 0,\n      \"experience_range\": \"0-0\",\n      \"experience_type\": \"Fresher\"\n    }\n  ],\n  \"education_required\": [],\n  \"languages_required\": [],\n  \"post_date\": null,\n  \"end_date\": null,\n  \"contact_us\": [],\n  \"additional_information\": null,\n  \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\",\n  \"raw_data\": {\n    \"job_titles\": \"Sales Executive, Business Development Executive\",\n    \"company\": null,\n    \"locations\": null,\n    \"employment_type\": \"Full-time\",\n    \"salary_details\": null,\n    \"responsibilities\": \"As a Sales Executive, you will be responsible for generating leads, qualifying prospects, and closing sales. This role requires a highly motivated and results-oriented individual with excellent communication and interpersonal skills.\",\n    \"skills_required\": \"communication, interpersonal\",\n    \"experience_required\": null,\n    \"education_required\": null,\n    \"languages_required\": null,\n    \"post_date\": null,\n    \"end_date\": null,\n    \"contact_us\": null,\n    \"jd_summary\": \"Sales Executive,Business Development Executive,communication skills, interpersonal skills\"\n  }\n}\n```",
                ],
            },
        ]


def convert_text_to_json(text: str) -> dict:
    genai.configure(api_key=os.environ["GEMINI_API_KEY"])
    generation_config = {
        "temperature": 1,
        "top_p": 0.95,
        "top_k": 40,
        "max_output_tokens": 8192,
        "response_mime_type": "application/json",
    }
    model = genai.GenerativeModel(
        model_name="gemini-2.0-flash-exp",
        generation_config=generation_config,
    )
    chat_session = model.start_chat(
        history=[
            {
                "role": "user",
                "parts": [
                    "Extract specific details from the provided resume text and return them as a structured JSON object, following the format and data extraction rules specified below.  If an entire object (like location, expected_salary) has all its fields as null, return an empty dictionary instead.If any value is missing or unavailable, return null for that field.\n\n\nData Fields and Requirements:\n\nPersonal Information:\n- name: Full name of the person and carefully find out without making mistake of spelling and initial for the name and all letter should be capital. If missing, return null.\n- email: List all email addresses mentioned in the resume. If missing, return an empty list [].carefully get the email without missing any character becauses it will be more important.\n- phone: List all phone numbers provided in the resume. If missing, return an empty list [].\n\n- location: Your task is to carefully parse this address, determine which components belong to the street, district, state, and country, and fill in any missing details. Follow these detailed rules and instructions for parsing and inferring:If any of these details are missing (e.g., state or country), infer them based on the district. Use the provided district name to find the corresponding state and country.\n  - street:This field should contain the door number, street name, and village name, if explicitly mentioned in the address.carefully find out the street.If no such details are available, set this field to null.\n  - district:Extract the district name from the address if provided.If no district is mentioned, set this field to null.\n  - state:Infer the state name based on the district or any other information in the address.If no state,district can be determined, set this field to null\n  - country:Infer the country name based on the district or state or any other information in the address.If no state,district,country can be determined, set this field to null\n  \n- expected_salary:\n  - salary: Provide the salary value if mentioned. If not provided, return null.if single like 50000 comes with 50,000 and range of salary comes with 50,000-70,000)\n  - currency: Currency used for the salary (if mentioned). If missing, return null.\n  - per: If salary is mentioned with a per unit (e.g., per year, per month, etc.), store the unit in this field. If missing, return null.\n\n- search_summary: A brief summary of all elements extracted from the resume, especially including the main words and keywords (e.g., skills,technologies,certifications,education,experience,language,project,location and any significant details).comes with full form and short form.for example (B.E and comes with B.E( Bachelor of Engineering ) and cse also which department cse(Computer Science Engineering),10th comes with 10th(sslc),12th comes with 12th(higher secondary) and also if they degree in cse then you should infer them B.E(bachelor of engineering) in cse(computer science engineering) and also provide more data becauses these is main data for resume matching and sorting so provide long data.A summary that should contain all the key details of the job description for identification purposes.education comes with short form and inside bracket comes with full form for example B.E(Bachelor of engineering)and also splitting the location like district,state,country should be properly without space carefully assign for example state like Tamilnadu not like Tamil Nadu.\n  \n\nExperience:\n Do not include internships in the experience. If the candidate has no experience mentioned in resume , return job: [] and total_duration: 0.\n\n- total_duration: add all the duration of all job experiences in decimal years (e.g., 5.4). If missing.calculate properly based on duration field in job list. If missing return 0\n-job:list of dictionary belowe mentioned details\n  - job_title: Job title or designation. If missing, return null.\n  - company: Company or organization name. If missing, return null.\n  - technology: List out all the skills used in the job title and get the skills or technologies (e.g., Java,python...) from the requirements and responsibilities passage.\n  - start_year: Extract the start year from the provided details and convert it to the format mm/yyyy. If missing, return null.\n  - end_year: Extract the end year from the provided details and convert it to the format mm/yyyy. If missing, return null. If the end year is not explicitly provided but the resume mentions an experience duration (e.g., \"3 years\"), calculate the end year by adding the duration to the start year. If neither is available, assume the experience is ongoing and use the current year as end_year.\n  - duration: Calculate the total duration of the experience in decimal years (e.g., 2.6). If missing, return null.\n  - responsibilities: List of key job responsibilities. If missing, return an empty list [].\n\nEducation:\n- List each qualification witth:\ndegree field should be unique based on that list of dictionary can happen.carefully get all the degree like  (\"Bachelor\", \"Master\", \"Doctorate\",\"Secondary\",\"Higher Secondary\",\"Diploma\") in the jd they had mentioned.\n1.  A field indicating the degree type, such as \"Bachelor\", \"Master\", \"Doctorate\",\"Secondary\",\"Higher Secondary\",\"Diploma\".. etc.\nFor 10th grade, use \"Secondary\".\nFor 12th grade, use \"Higher Secondary\".\nIf the degree is not explicitly mentioned, infer it from degree_name.\nIf degree_name is also missing, return null.\nexample:\nInput to Output (degree)\n1.\"Bachelor of Engineering\"to\"Bachelor\"\n2.\"Master of Technology\" to \"Master\"\n3.\"Ph.D. in Computer Science\" to \"Doctorate\"\n4.\"10th \" to \"Secondary\"\n5.\"12th \"\tto \"Higher Secondary\"\n6.\"Studied CSE\" (degree not mentioned) to \"Bachelor\" (inferred from \"B.E.\")\n7.\"Studied AI\" (degree not mentioned) to null (degree cannot be inferred)\n2. degree_name (Short Form):\nExtract the short form of the degree:\n\"Bachelor of Engineering\" → \"B.E.\"\n\"Bachelor of Technology\" → \"B.Tech\"\n\"Master of Science\" → \"M.Sc\"\n10th and 12th grade degrees:\n\"10th\" → \"SSLC\"\n\"12th\" → \"Higher Secondary\"\nIf degree_name is missing, infer it from department.\nIf still missing, return null.\n3. department (Short Form):\nExtract the short form of the department:\n\"Computer Science Engineering\" → \"CSE\"\n\"Information Technology\" → \"IT\"\n\"Electronics and Communication Engineering\" → \"ECE\"\nIf missing, return null.\n4. institution (College/University Name)\nExtract and return the name of the institution.\nIf missing, return null.\n5. start_year (Date Extraction):\nExtract the start year in mm/yyyy or yyyy format.\nIf only a single year is found, determine if it represents start_year or end_year based on context you should infer.\nIf missing, return null.\n6. end_year (Date Extraction):\nExtract the end year in mm/yyyy or yyyy format.\nIf only one year is mentioned, infer whether it is start_year or end_year.\nIf missing, return null.\n7. duration (Integer):\nCalculate the number of years for the degree.\nIt should always be an integer, not a float.\nExample:\nstart_year = 2018, end_year = 2022 → duration = 4\nIf data is missing, return null.\n8. cgpa: If CGPA is mentioned, convert it to a percentage using the formula:\nPercentage=CGPA×10\nIf percentage is directly mentioned, use it as is.\nIf CGPA is missing, return null.\nexample:\ninput to output(cgpa)\n1.\"8.5\" to \"85%\"\n2.\"7.2\" to \"72%\"\n3.\"92%\" to \"92%\"\n4.\"GPA: 3.8 (out of 4)\" to \"95%\" (scaled to 10-point CGPA)\n5.\"First class with distinction\" to null (CGPA not mentioned)\n6.\"No CGPA or percentage given\" to null\n\nLanguages:A list of dictionaries containing the following:\n- language: The language name (e.g., \"English\", \"Spanish\").\n- proficiency: The proficiency level classified as: values should only be fluent or intermediate or basic not other.(based on the context you should understand and give a value on any(fluent,intermediate,basic))\n  - fluent (for high proficiency,advance,fluent,quick,Native / Mother Tongue ,Professional these all will considered as fluent)\n  - intermediate (for medium proficiency,Conversational these all will be considered as intermediate)\n  - basic (for low proficiency,advantage,understandable,manageable,Beginner) based on the content you find out properly. If not specified, default to \"basic\".\n-If no languages are found, return an empty list ([]).\n\nSkills:\nExtract all skills mentioned in the resume and categorize them into technical_skills and soft_skills as follows:\n-technical_skills:\nIdentify all technologies, programming languages, frameworks, databases, tools, cloud services, AI/ML models, and software explicitly mentioned anywhere in the resume, including sections like experience, projects, certifications, achievements, and education.\nDo not limit extraction to the \"Skills\" section—search throughout the resume.\nEnsure no duplicate entries (avoid repeating the same word).\nIf no technical skills are found, return an empty list [].\nand also if skills contain react js or react.js comes in react js not react.js\n-soft_skills:\nExtract all non-technical and interpersonal skills such as communication, teamwork, leadership, problem-solving, adaptability, time management, collaboration, etc.\nThese should be gathered from any relevant section of the resume.\n\n\nprojects:\nExtract project details from the given resume. Each project should contain the following fields:\n-title (Project Name): Extract the project name. If missing, return null.\n-skills (Technologies Used): Identify the technologies, programming languages, frameworks, or tools explicitly mentioned as part of the project.\nEnsure that only the technologies used in the project are included, not general skills and doesn't take from any other fields like skills,certificates.\nIf technologies, programming languages, frameworks, or tools are comes that should be comes in list of string eg[\"skill1\",\"skill2\"]\nIf no technologies are explicitly stated, return [].\n-responsibilities (Key Contributions): Extract key contributions, tasks, or work done in the project. These could include development, testing, deployment, optimization, integration, etc.\nLook for verbs like developed, designed, implemented, integrated, optimized, automated, built, tested, deployed, enhanced, configured, etc.\nIf responsibilities are implied but not explicitly mentioned, attempt to infer them from the project description.\nBased on your clarification (\"if there is no skills but there is workflow should come in responsibilities\").\nIf there is one line or a sentence then comes in list of string based on the one sentence end dot.\nIf no responsibilities are found, return [].\n\nCertificates:\n- List each certificate or courses or achievement with:\n  - title: Name of the certificate. If missing, return null.\n  - issuer: Issuing organization and institute whatever they mention. If missing, return null.\n  - year: Issuance year. If missing, return null.\n\nSearch Summary:\nExtract and summarize all key(name,email,phone number,skills,education,experience,language,location,certifications,projects) elements from the resume, ensuring completeness, clarity, and standardization and provide a brief summary about resume becuase these summary is useful for searching the resume. The summary should include:\n-Education:\nExtract both the short form and full form (e.g., B.E (Bachelor of Engineering), M.Tech (Master of Technology)).\nIf the degree is in CSE, infer it as B.E (Bachelor of Engineering) in CSE (Computer Science Engineering).\nInclude standard educational milestones:\n10th (SSLC)\n12th (Higher Secondary)\n-Skills & Technologies:\nList all programming languages, frameworks, tools, databases, and cloud platforms.\nEnsure common abbreviations are expanded (e.g., SQL (Structured Query Language), IBM DB2 (International Business Machines Database 2)).\n-Certifications:\nExtract all certifications with exact names.\n-Experience (if any):\nMention job roles, company names, and durations.\n-Projects:\nList key projects with clear descriptions.\n-Languages Known:\nInclude all languages spoken by the candidate.\n-Location:\nSplit location into District, State, Country with correct formatting (e.g., Krishnagiri, Tamilnadu, India).\n-Key Identifiers for Matching:\nEnsure the summary is rich in keywords for resume matching and sorting.\nProvide a structured, detailed summary that aligns with job descriptions for efficient categorization.\n\nraw_data:\n-raw_data:Include an additional field, raw_data, where each key corresponds to a structured field (e.g., name,email,locations) and contains the exact full raw text from the resume used to extract that data.containing the exact full raw text for each field.provide proper spacing and find out the correct the point line has end and give dot\nemail-It is a string comes with comma if there are two email\nphone-It is a string comes with comma if there are two email\nexpected_salary-It is a string comes with for example($40,000-$50,000 per annnum if range of salary or if only one not range $40,000 per annum).\nlocation-it is a string comes like for ( if there are district comes with ditsrict,state,country)\nexperience-it is list of dict if technology has two comes with string for example(string1,string2) and if responsibilities is a string if there are two or more points comes with dot\nlanguages-It is list of string if more languages comes with comma (for example proficiency in english and comes with \"English-proficiency\").\nskills-It is a dictionary fields like technical and soft skills that should contain list of skills.\ncertificates-It is a list of string that should conatin only certificate title.\nprojects-it is list of dict if Skills stored as a list ([\"Python\", \"Java\"]).\n and if responsibilities is also list of string if there are two or more points comes with dot. fromat : {\n        \"name\": \"string\",\n        \"email\": [\"string\", \"string\"],\n        \"phone\": [\"string\", \"string\"],\n        \"location\": {\n            \"street\": \"string\",\n            \"district\": \"string\",\n            \"state\": \"string\",\n            \"country\": \"string\"\n        },\n        \"expected_salary\": {\n            \"salary\": null,\n            \"currency\": \"string\",\n            \"per\": \"string\"\n        },\n        \"summary\": \"string\",\n        \"experience\": {\n    \n            \"job\": [\n            {\n            \"job_title\": \"string\",  \n            \"company\": \"string\",  \n            \"Technology\": [\"string\", \"string\"],  \n            \"start_year\": \"mm/yyyy\",  \n            \"end_year\": \"mm/yyyy\",  \n            \"duration\": \"X.Y\",  \n            \"responsibilities\": [\"string\", \"string\", \"string\"]  \n           }\n        ],\n            \"total_duration\":\"X.Y\"\n        },\n        \"education\": [\n            {\n            \"degree\":\"string\",\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n            }\n        ],\n        \"languages\": [\n            {\n            \"language\": \"string\",\n            \"proficiency\": \"string\"\n            }\n        ],\n        \"skills\": {\n        \"technical_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ],\n        \"soft_skills\": [\n            \"string\",\n            \"string\",\n            \"string\"\n        ]\n        },\n        \"projects\": [\n            {\n            \"title\": \"string\",\n            \"skills\": [\n                \"string\",\n                \"string\"\n            ],\n            \"responsibilities\": [\n                \"string\",\n                \"string\",\n                \"string\"\n            ]\n            }\n        ],\n        \"certificates\": [\n            {\n            \"title\": \"string\",\n            \"issuer\": \"string\",\n            \"year\": \"string\"\n            }\n        ],\n        \"search_summary\": \"string\",\n        \"raw_data\":{\n        \"name\": \"string\",\n        \"email\": \"string\",\n        \"phone\": \"string\",\n        \"location\": \"string\",\n        \"expected_salary\": \"string\",\n        \"summary\": \"string\",\n        \"experience\": [\n            {\n            \"job_title\": \"string\",\n            \"company\": \"string\",\n            \"Technology\":\"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"X.Y\",\n            \"responsibilities\":\"string\"\n            }\n        ],\n        \"education\": [\n            {\n            \"degree_name\": \"string\",\n            \"department\": \"string\",\n            \"institution\": \"string\",\n            \"start_year\": \"mm/yyyy\",\n            \"end_year\": \"mm/yyyy\",\n            \"duration\": \"x\",\n            \"cgpa\": \"string\"\n            }\n        ],\n        \"languages\":[\"string\"],\n        \"skills\":{\"technical_skills\":[\"string\"],\"soft_skills\":[\"string\"]},\n        \"projects\": [\n            {\n            \"title\": \"string\",\n            \"skills\": \"string\",\n            \"responsibilities\":[\"string\"]\n            }\n        ],\n        \"certificates\": [\"string\"],\n        \"search_summary\": \"string\"\n        }\n    }",
                ],
            },
            {
                "role": "model",
                "parts": [
                    "```json\n{\n  \"name\": \"VENKATA KRISHNAN R\",\n  \"email\": [\n    \"venkatakrishnan07022003@gmail.com\"\n  ],\n  \"phone\": [\n    \"+91-9344123567\"\n  ],\n  \"location\": {\n    \"street\": null,\n    \"district\": \"Krishnagiri\",\n    \"state\": \"Tamilnadu\",\n    \"country\": \"India\"\n  },\n  \"expected_salary\": {},\n  \"summary\": null,\n  \"experience\": {\n    \"job\": [],\n    \"total_duration\": 0\n  },\n  \"education\": [\n    {\n      \"degree\": \"Secondary\",\n      \"degree_name\": \"SSLC\",\n      \"department\": null,\n      \"institution\": \"Shree Niketan Matriculation Higher Secondary School\",\n      \"start_year\": \"06/2019\",\n      \"end_year\": \"03/2020\",\n      \"duration\": 1,\n      \"cgpa\": \"82%\"\n    },\n    {\n      \"degree\": \"Higher Secondary\",\n      \"degree_name\": \"Higher Secondary\",\n      \"department\": \"Computer Science\",\n      \"institution\": \"Shree Niketan Matriculation Higher Secondary School\",\n      \"start_year\": \"06/2021\",\n      \"end_year\": \"04/2023\",\n      \"duration\": 2,\n      \"cgpa\": \"80%\"\n    }\n  ],\n  \"languages\": [\n    {\n      \"language\": \"Tamil\",\n      \"proficiency\": \"fluent\"\n    },\n    {\n      \"language\": \"English\",\n      \"proficiency\": \"fluent\"\n    }\n  ],\n  \"skills\": {\n    \"technical_skills\": [\n      \"Java\",\n      \"C\",\n      \"Python\",\n      \"C++\",\n      \"HTML\",\n      \"CSS\",\n      \"SQL\",\n      \"Data Structures\",\n      \"Algorithms\",\n      \"MySQL\"\n    ],\n    \"soft_skills\": [\n      \"Communication\",\n      \"Teamwork\",\n      \"Problem-solving\"\n    ]\n  },\n  \"projects\": [],\n  \"certificates\": [],\n  \"search_summary\": \"VENKATA KRISHNAN R, located in Krishnagiri, Tamilnadu, India, can be reached at venkatakrishnan07022003@gmail.com and +91-9344123567. He is proficient in Tamil and English.  His technical skills encompass Java, C, Python, C++, HTML, CSS, SQL, Data Structures, Algorithms, and MySQL. He also possesses soft skills like Communication, Teamwork, and Problem-solving.  Regarding education, he completed SSLC (Secondary) from Shree Niketan Matriculation Higher Secondary School (06/2019-03/2020) with 82% and Higher Secondary (Higher Secondary) in Computer Science from the same institution (06/2021-04/2023) with 80%.\",\n  \"raw_data\": {\n    \"name\": \"VENKATA KRISHNAN R\",\n    \"email\": \"venkatakrishnan07022003@gmail.com\",\n    \"phone\": \"+91-9344123567\",\n    \"location\": \"Krishnagiri, Tamilnadu, India\",\n    \"expected_salary\": null,\n    \"summary\": null,\n    \"experience\": [],\n    \"education\": [\n      {\n        \"degree_name\": \"SSLC\",\n        \"department\": null,\n        \"institution\": \"Shree Niketan Matriculation Higher Secondary School\",\n        \"start_year\": \"June 2019\",\n        \"end_year\": \"March 2020\",\n        \"duration\": \"1 Year\",\n        \"cgpa\": \"82%\"\n      },\n      {\n        \"degree_name\": \"Higher Secondary\",\n        \"department\": \"Computer Science\",\n        \"institution\": \"Shree Niketan Matriculation Higher Secondary School\",\n        \"start_year\": \"June 2021\",\n        \"end_year\": \"April 2023\",\n        \"duration\": \"2 Years\",\n        \"cgpa\": \"80%\"\n      }\n    ],\n    \"languages\": \"Tamil, English-Fluent\",\n    \"skills\": {\n      \"technical_skills\": \"Java, C, Python, C++, HTML, CSS, SQL, Data Structures and Algorithms, MySQL.\",\n      \"soft_skills\": \"Communication, Teamwork and Problem-solving.\"\n    },\n    \"projects\": [],\n    \"certificates\": [],\n    \"search_summary\": null\n  }\n}\n```",
                ],
            },
        ]               
    )
    response = chat_session.send_message(text)
    print("Raw response from Gemini AI:", response.text)
    generated_text=response.text
    try:
        structured_json= json.loads(generated_text)
        print(structured_json)
        return structured_json
    except Exception as e:
        return {"error": f"Failed to parse the response into JSON: {str(e)}"}